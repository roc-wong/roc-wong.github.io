<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fly high</title>
  <subtitle>我要飞得更高-九万里风鹏正举</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://roc-wong.github.io/"/>
  <updated>2017-06-09T12:24:04.000Z</updated>
  <id>https://roc-wong.github.io/</id>
  
  <author>
    <name>roc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腹肌锻炼</title>
    <link href="https://roc-wong.github.io/blog/2017/06/abs-exercises.html"/>
    <id>https://roc-wong.github.io/blog/2017/06/abs-exercises.html</id>
    <published>2017-06-09T11:54:08.000Z</published>
    <updated>2017-06-09T12:24:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>健身是一个循序渐进的过程，不要想一天就成为你心中的那个偶像，需要持久坚持和努力。腹肌训练更是如此，想要减脂塑形、梦想拥有完美身材的男女，不妨一起来试练下面一组动作，提示各位要按照顺序完成训练量。</p>
<a id="more"></a>
<p>动作一、60个开合跳，连续进行；</p>
<p><img src="http://p3.pstatp.com/large/52e0008ccb2085c2c0b" alt=""></p>
<p>动作二、40个仰卧交替收膝，动作要到位；</p>
<p><img src="http://p3.pstatp.com/large/52e0008ccb0f1ac2a38" alt=""></p>
<p>动作三、10~15个仰卧起坐；</p>
<p><img src="http://p3.pstatp.com/large/52d0008cd209da95902" alt=""></p>
<p>动作四、看到Z没有，20个凳(Z)上反屈伸；</p>
<p><img src="http://p1.pstatp.com/large/52e0008ccb14d565f3c" alt=""></p>
<p>动作五、按照下方示范动作，左右各20个侧步蹲；</p>
<p><img src="http://p1.pstatp.com/large/5b100007798d8ceeb44" alt=""></p>
<p>动作六、同动作三，俯卧撑10~15个；</p>
<p><img src="http://p3.pstatp.com/large/5b100007799ddf0815e" alt=""></p>
<p>动作七、有没有经常见到这个动作呢？仰卧举腿20个；</p>
<p><img src="http://p9.pstatp.com/large/5b10000779a9f79ffda" alt=""></p>
<p>动作八、30个高抬腿走起 ；</p>
<p><img src="http://p3.pstatp.com/large/52d0008cd211e4c9755" alt=""></p>
<p>动作九、深蹲跳 10个就够了；</p>
<p><img src="http://p3.pstatp.com/large/5b10000779b4ab8800a" alt=""></p>
<p>动作十、平板支撑60秒！哦，一分钟 ；</p>
<p><img src="http://p1.pstatp.com/large/52c0008ca6fd187a7c4" alt=""></p>
<p>附带视频一个：<a href="http://www.toutiao.com/i6263916207875817985/" target="_blank" rel="external">click me</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;健身是一个循序渐进的过程，不要想一天就成为你心中的那个偶像，需要持久坚持和努力。腹肌训练更是如此，想要减脂塑形、梦想拥有完美身材的男女，不妨一起来试练下面一组动作，提示各位要按照顺序完成训练量。&lt;/p&gt;
    
    </summary>
    
      <category term="健身" scheme="https://roc-wong.github.io/categories/%E5%81%A5%E8%BA%AB/"/>
    
    
      <category term="健身 腹肌" scheme="https://roc-wong.github.io/tags/%E5%81%A5%E8%BA%AB-%E8%85%B9%E8%82%8C/"/>
    
  </entry>
  
  <entry>
    <title>maven-war-plugin</title>
    <link href="https://roc-wong.github.io/blog/2017/04/maven-war-plugin.html"/>
    <id>https://roc-wong.github.io/blog/2017/04/maven-war-plugin.html</id>
    <published>2017-04-25T14:06:59.000Z</published>
    <updated>2017-04-25T15:35:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Apache-Maven-WAR-Plugin"><a href="#Apache-Maven-WAR-Plugin" class="headerlink" title="Apache Maven WAR Plugin"></a>Apache Maven WAR Plugin</h2><p>The WAR Plugin is responsible for collecting all artifact dependencies, classes and resources of the web application and packaging them into a web application archive.</p>
<p>“打包“这个词听起来比较土，比较正式的说法应该是”构建项目软件包“，具体说就是将项目中的各种文件，比如源代码、编译生成的字节码、配置文件、文档，按照规范的格式生成归档，最常见的当然就是JAR包和WAR包了，复杂点的例子是Maven官方下载页面的分发包，它有自定义的格式，方便用户直接解压后就在命令行使用。作为一款”打包工具“，Maven自然有义务帮助用户创建各种各样的包，规范的JAR包和WAR包自然不再话下，略微复杂的自定义打包格式也必须支持，本文就介绍一些常用的打包案例以及相关的实现方式，除了前面提到的一些包以外，你还能看到如何生成源码包、Javadoc包、以及从命令行可直接运行的CLI包。</p>
<a id="more"></a>
<p>任何一个Maven项目都需要定义POM元素packaging（如果不写则默认值为jar）。顾名思义，该元素决定了项目的打包方式。实际的情形中，如果你不声明该元素，Maven会帮你生成一个JAR包；如果你定义该元素的值为war，那你会得到一个WAR包；如果定义其值为POM（比如是一个父模块），那什么包都不会生成。除此之外，Maven默认还支持一些其他的流行打包格式，例如ejb3和ear。你不需要了解具体的打包细节，你所需要做的就是告诉Maven，”我是个什么类型的项目“，这就是约定优于配置的力量。</p>
<p>对应于同样的package生命周期阶段，Maven为jar项目调用了maven-jar-plugin，为war项目调用了maven-war-plugin，换言之，packaging直接影响Maven的构建生命周期。了解这一点非常重要，特别是当你需要自定义打包行为的时候，你就必须知道去配置哪个插件。</p>
<h2 id="war-plugin的常用配置参数"><a href="#war-plugin的常用配置参数" class="headerlink" title="war plugin的常用配置参数"></a>war plugin的常用配置参数</h2><h3 id="archiveClasses配置项"><a href="#archiveClasses配置项" class="headerlink" title="archiveClasses配置项"></a>archiveClasses配置项</h3><p>该配置的值为true|false，默认是false。表示是否将class进行打包。<br>正常情况下war类型的工程，java代码编译后的类文件会放到WEB-INF/classes目录下面，散装。 当该参数配置为true时，会将所有的class打包为一个jar，jar的名字与war的名字一致（除了后缀）。然后把这个jar放到WEB-INF/lib目录下，此时WEB-INF/classes目录下是空的。</p>
<h3 id="attachClasses配置项"><a href="#attachClasses配置项" class="headerlink" title="attachClasses配置项"></a>attachClasses配置项</h3><p>该配置的值为true|false，默认是false。表示在发布war包的时候是否同时发布一个jar包（只有classes，不包含页面相关文件）。<br>正常情况下war类型的工程，当我们执行install或者deploy的时候build出一个war包，安装到本地或者发布到远程。<br>当该参数配置为true时，除了war包外还会多出一个jar包，不过该jar包的classifier默认为classes。</p>
<h3 id="overlays配置节点"><a href="#overlays配置节点" class="headerlink" title="overlays配置节点"></a>overlays配置节点</h3><p>overlays配置的作用是，将指定war包中的内容与当前项目进行合并。合并策略：如果存在同名冲突，则使用当前项目中的文件。 overlay的具体配置项（include|exclude）可以指定包含或者排除特定模式的文件。</p>
<h2 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h2><h3 id="多war合并"><a href="#多war合并" class="headerlink" title="多war合并"></a>多war合并</h3><p>archiveClasses和attachClasses参数可以同时配置为true。此时打包文件中含有lib，不含classes。发布时会同时发布classifier为classes的jar包。</p>
<p>如果当前工程A需要从B工程的war包中合入页面文件，同时代码中也要使用B的类文件。工程B包含配置如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">attachClasses</span>&gt;</span>true<span class="tag">&lt;/<span class="name">attachClasses</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>工程A包含配置如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>groupB<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">classifier</span>&gt;</span>classes<span class="tag">&lt;/<span class="name">classifier</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>groupB<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">type</span>&gt;</span>war<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;<span class="name">overlays</span>&gt;</span></div><div class="line">                      <span class="tag">&lt;<span class="name">overlay</span>&gt;</span></div><div class="line">                          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>groupB<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>B<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                      <span class="tag">&lt;/<span class="name">overlay</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;/<span class="name">overlays</span>&gt;</span></div><div class="line">              <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>可注意如果同名的文件夹会进行合并，不合并空文件夹。</p>
</blockquote>
<h3 id="把class文件打包成jar，怎么排除resources目录"><a href="#把class文件打包成jar，怎么排除resources目录" class="headerlink" title="把class文件打包成jar，怎么排除resources目录?"></a>把class文件打包成jar，怎么排除resources目录?</h3><p>正常情况下war类型的工程，java代码编译后的类文件会放到WEB-INF/classes目录下面，散装。 当archiveClasses参数配置为true时，会将所有的class打包为一个jar，jar的名字与war的名字一致。然后把这个jar放到WEB-INF/lib目录下，此时WEB-INF/classes目录下是空的，但如果想在war包的WEB-INF/classes中保留logback.xml配置文件，该怎么做？</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;plugin&gt;</span></div><div class="line">    <span class="params">&lt;artifactId&gt;</span>maven-war-plugin<span class="params">&lt;/artifactId&gt;</span></div><div class="line">    <span class="params">&lt;version&gt;</span><span class="number">3.0</span><span class="number">.0</span><span class="params">&lt;/version&gt;</span></div><div class="line">    <span class="params">&lt;configuration&gt;</span></div><div class="line">        <span class="params">&lt;archiveClasses&gt;</span>true<span class="params">&lt;/archiveClasses&gt;</span></div><div class="line">        <span class="params">&lt;webResources&gt;</span></div><div class="line">            <span class="params">&lt;resource&gt;</span></div><div class="line">                <span class="params">&lt;directory&gt;</span>src<span class="meta-keyword">/main/</span>resources<span class="params">&lt;/directory&gt;</span></div><div class="line">                <span class="params">&lt;targetPath&gt;</span>WEB-INF/classes<span class="params">&lt;/targetPath&gt;</span></div><div class="line">                <span class="params">&lt;filtering&gt;</span>true<span class="params">&lt;/filtering&gt;</span></div><div class="line">            <span class="params">&lt;/resource&gt;</span></div><div class="line">        <span class="params">&lt;/webResources&gt;</span></div><div class="line">    <span class="params">&lt;/configuration&gt;</span></div><div class="line"><span class="params">&lt;/plugin&gt;</span></div></pre></td></tr></table></figure>
<h3 id="对项目进行动态打包，不同的环境使用不同的配置文件打包"><a href="#对项目进行动态打包，不同的环境使用不同的配置文件打包" class="headerlink" title="对项目进行动态打包，不同的环境使用不同的配置文件打包"></a>对项目进行动态打包，不同的环境使用不同的配置文件打包</h3><h4 id="demo-1"><a href="#demo-1" class="headerlink" title="demo 1"></a>demo 1</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">project/</div><div class="line">`-- src</div><div class="line">    |<span class="string">-- main</span></div><div class="line">    |<span class="string">   </span>|<span class="string">-- java</span></div><div class="line">    |<span class="string">   </span>|<span class="string">-- resources</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- local</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- logback.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- spring-dataSource.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   `-- variable.propertes</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- product</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- logback.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- spring-dataSource.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   `-- variable.propertes</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   `-- qa</span></div><div class="line">    |<span class="string">   </span>|<span class="string">       </span>|<span class="string">-- logback.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">       </span>|<span class="string">-- spring-dataSource.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">       `-- variable.propertes</span></div><div class="line">    |<span class="string">   </span>|<span class="string">-- webapp</span></div><div class="line">    `-- test</div></pre></td></tr></table></figure>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">maven <span class="keyword">package</span> <span class="title">–P local   开发环境</span></div><div class="line">maven <span class="keyword">package</span> <span class="title">–P product  生产环境</span></div></pre></td></tr></table></figure>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>local<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">package.environment</span>&gt;</span>local<span class="tag">&lt;/<span class="name">package.environment</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>product<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">package.environment</span>&gt;</span>product<span class="tag">&lt;/<span class="name">package.environment</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- class文件打包成jar包，排除相关配置文件和jrebel配置文件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>local/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>product/*<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>rebel.xml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 区别dev环境与生产环境logback.xml配置 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">archiveClasses</span>&gt;</span>true<span class="tag">&lt;/<span class="name">archiveClasses</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">failOnMissingWebXml</span>&gt;</span>false<span class="tag">&lt;/<span class="name">failOnMissingWebXml</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">webResources</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources/$<span class="template-variable">&#123;package.environment&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span></div><div class="line">                        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>WEB-INF/classes<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">webResources</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>default-jar<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="demo-2"><a href="#demo-2" class="headerlink" title="demo 2"></a>demo 2</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">project/</div><div class="line">`-- src</div><div class="line">    |<span class="string">-- main</span></div><div class="line">    |<span class="string">   </span>|<span class="string">-- java</span></div><div class="line">    |<span class="string">   </span>|<span class="string">-- env</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- dev</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- log4j.properties</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- spring-dataSource.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   `-- variable.propertes</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- prod</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- log4j.properties</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   </span>|<span class="string">-- spring-dataSource.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   </span>|<span class="string">   `-- variable.propertes</span></div><div class="line">    |<span class="string">   </span>|<span class="string">   `-- qa</span></div><div class="line">    |<span class="string">   </span>|<span class="string">       </span>|<span class="string">-- log4j.properties</span></div><div class="line">    |<span class="string">   </span>|<span class="string">       </span>|<span class="string">-- spring-dataSource.xml</span></div><div class="line">    |<span class="string">   </span>|<span class="string">       `-- variable.propertes</span></div><div class="line">    |<span class="string">   </span>|<span class="string">-- resources</span></div><div class="line">    |<span class="string">   `-- webapp</span></div><div class="line">    `-- test</div></pre></td></tr></table></figure>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mvn clean <span class="keyword">package</span> <span class="title">-P dev</span></div><div class="line">mvn clean <span class="keyword">package</span> <span class="title">-P qa</span></div></pre></td></tr></table></figure>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span></div><div class="line">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>webapp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>webapp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>scm:svn:http://127.0.0.1/dummy<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>scm:svn:https://127.0.0.1/dummy<span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tag</span>&gt;</span>HEAD<span class="tag">&lt;/<span class="name">tag</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://127.0.0.1/dummy<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">spring-version</span>&gt;</span>3.1.0.RELEASE<span class="tag">&lt;/<span class="name">spring-version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$<span class="template-variable">&#123;final.name&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">overlays</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">overlay</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>TransactionResource<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>TransactionResource<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>WEB-INF/web.xml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">overlay</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">overlays</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">webResources</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$<span class="template-variable">&#123;runtime.env&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span></div><div class="line">                            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>WEB-INF/classes<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">webResources</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        ……</div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">runtime.env</span>&gt;</span>src/main/env/dev<span class="tag">&lt;/<span class="name">runtime.env</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">final.name</span>&gt;</span>webapp<span class="tag">&lt;/<span class="name">final.name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.eightqiu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>CodeCmns<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>qa<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">runtime.env</span>&gt;</span>src/main/env/qa<span class="tag">&lt;/<span class="name">runtime.env</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">final.name</span>&gt;</span>webapp_$<span class="template-variable">&#123;buildNumber&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">final.name</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>buildnumber-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">phase</span>&gt;</span>validate<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>create<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">format</span>&gt;</span><span class="template-variable">&#123;0,date,yyyyMMdd&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">format</span>&gt;</span></span></div><div class="line">                            <span class="tag">&lt;<span class="name">items</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">item</span>&gt;</span>timestamp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">items</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">reporting</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">reporting</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.eightqiu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>CodeCmns<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">runtime.env</span>&gt;</span>src/main/env/prod<span class="tag">&lt;/<span class="name">runtime.env</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">final.name</span>&gt;</span>webapp<span class="tag">&lt;/<span class="name">final.name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.eightqiu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>CodeCmns<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      maven war plugin
    
    </summary>
    
      <category term="Maven" scheme="https://roc-wong.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://roc-wong.github.io/tags/Maven/"/>
    
      <category term="maven war plugin" scheme="https://roc-wong.github.io/tags/maven-war-plugin/"/>
    
  </entry>
  
  <entry>
    <title>maven-paranamer-plugin</title>
    <link href="https://roc-wong.github.io/blog/2017/04/maven-paranamer-plugin.html"/>
    <id>https://roc-wong.github.io/blog/2017/04/maven-paranamer-plugin.html</id>
    <published>2017-04-25T13:16:55.000Z</published>
    <updated>2017-04-25T14:06:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-it"><a href="#What-is-it" class="headerlink" title="What is it?"></a>What is it?</h2><p>It is a library that allows the parameter names of non-private methods and constructors to be accessed at runtime. Normally this information is dropped by the compiler. In effect, methods like doSometing(mypkg.Person toMe) currently look like doSomething(mypackage.Person ???) to people using Java’s reflection to inspect methods.</p>
<p>项目主页：<a href="https://github.com/paul-hammant/paranamer" target="_blank" rel="external">https://github.com/paul-hammant/paranamer</a></p>
<a id="more"></a>
<h2 id="如何在运行时获取java方法参数名称"><a href="#如何在运行时获取java方法参数名称" class="headerlink" title="如何在运行时获取java方法参数名称?"></a>如何在运行时获取java方法参数名称?</h2><ol>
<li>由于jdk的反射方式，未提供获取参数名的方法</li>
<li>Java的字节码文件默认不存储参数名称。在使用javac编译时，如果开启-g:{vars}选项，可以增加Local variable debugging information。对java方法，参数实际是按照局部变量来存储的，所以可以获取参数名称；但对于java接口中的方法声明，这种方法就无法获取参数名称。</li>
</ol>
<p>Paranamer专门用来解决获取参数名的问题。其原理是在编译阶段，修改.class文件，在类或接口的字节码文件中增加一个字符串常量，这个常量保存了所有的方法声明信息，包括方法名、参数类型、参数名称。这样在运行时，class loader加载类文件以后，使用Paranamer的api去读取这个字符串，就可以获取参数名称。加上java反射，实际上可以把源代码重现出来。</p>
<p>这个工具可以用来实现代码生成器。其缺点在于，它需要修改源项目的build步骤。据其项目主页说明，Java 8已经加入存储参数名称的功能。</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// MySomethingOrOther.java**</span></div><div class="line"><span class="function"><span class="keyword">Method</span> <span class="title">method</span> = <span class="title">Foo</span>.<span class="title">class</span>.<span class="title">getMethod</span><span class="params">(...)</span>;</span></div><div class="line"></div><div class="line">Paranamer paranamer = <span class="keyword">new</span> CachingParanamer();</div><div class="line"></div><div class="line">String[] parameterNames = paranamer.lookupParameterNames(<span class="function"><span class="keyword">method</span>) // <span class="title">throws</span> <span class="title">ParameterNamesNotFoundException</span> <span class="title">if</span> <span class="title">not</span> <span class="title">found</span></span></div><div class="line"></div><div class="line">// <span class="title">or</span>:</div><div class="line"></div><div class="line">parameterNames = paranamer.lookupParameterNames(<span class="function"><span class="keyword">method</span>, <span class="title">false</span>) // <span class="title">will</span> <span class="title">return</span> <span class="title">null</span> <span class="title">if</span> <span class="title">not</span> <span class="title">found</span></span></div></pre></td></tr></table></figure>
<h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><p>需求：通过java的反射获取method，使用paranamer获取method的参数名称。<br>诡异之处：使用Paranamer paranamer = new CachingParanamer()l.ookupParameterNames(method);无法正常获取方法的变量名称。</p>
<p>一个简单的java类，<strong>请注意使用了import .* 的方式</strong></p>
<figure class="highlight julia"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">package hbec.commons.services.stock.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> hbec.commons.domain.stock.condition.dto.*;</div><div class="line"><span class="keyword">import</span> hbec.commons.domain.stock.vo.*;</div><div class="line"><span class="keyword">import</span> hbec.exception.portal.HbecPortalStockBizException;</div><div class="line"><span class="keyword">import</span> hbec.platform.commons.annotations.HbecService;</div><div class="line"><span class="keyword">import</span> hbec.platform.commons.exceptions.HbecDbServiceException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line">/**</div><div class="line"> * <span class="meta">@author</span> roc Jul <span class="number">4</span>, <span class="number">2016</span></div><div class="line"> *</div><div class="line"> */</div><div class="line">public interface IConditionTradeController &#123;</div><div class="line"></div><div class="line">	ConditionSaveResult save(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> ConditionTradeDto conditionTradeDto) ;</div><div class="line"></div><div class="line">	ConditionSaveResult saveTurnPoint(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> ConditionTradeTurnPointDto conditionTradeDto) ;</div><div class="line"></div><div class="line">	ConditionSaveResult saveBatching(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> ConditionTradeBatchingDto conditionTradeDto) ;</div><div class="line"></div><div class="line">	ConditionSaveResult saveGrid(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> GridTradeDto conditionTradeDto) ;</div><div class="line"></div><div class="line">	ConditionSaveResult saveProfit(<span class="built_in">Integer</span> userId, ProfitConditionTradeDto profitConditionTradeDto) ;</div><div class="line"></div><div class="line">	<span class="built_in">Integer</span> delete(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	<span class="built_in">Integer</span> pause(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	<span class="built_in">Integer</span> resume(<span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	PageVo&lt;ConditionTradeMarketVO&gt; findMonitorPageWithMarket(<span class="built_in">Integer</span> userId, <span class="built_in">String</span> code, ConditionPageVo&lt;ConditionTradeMarketVO&gt; pager) ;</div><div class="line"></div><div class="line">	ConditionTradeDetailVo detail(<span class="meta">@NotNull</span> <span class="built_in">Integer</span> userId, <span class="meta">@NotNull</span> <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	PageVo&lt;ConditionTradeHistoryVo&gt; queryHistory(<span class="meta">@NotNull</span> <span class="built_in">Integer</span> userId, <span class="built_in">String</span> stockCode, PageVo&lt;ConditionTradeHistoryVo&gt; pager) ;</div><div class="line"></div><div class="line">	ConditionTradeDetailVo detailWithMarket(<span class="built_in">Integer</span> userId, <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	List&lt;EntrustVO&gt; queryEntrustRecord(<span class="built_in">Integer</span> userId, <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	List&lt;ConditionInfoVO&gt; queryEntrustResult(<span class="built_in">Integer</span> userId, <span class="built_in">String</span> stockCode, <span class="built_in">String</span> historyIds) ;</div><div class="line"></div><div class="line">	PageCursorVo&lt;ConditionInfoVO&gt; queryEntrustedResult(<span class="built_in">Integer</span> userId, <span class="built_in">String</span> stockCode, <span class="built_in">Integer</span> warnId, <span class="built_in">Integer</span> cursor, <span class="built_in">Integer</span> pageSize) ;</div><div class="line"></div><div class="line">	CountTradeHistoryVo countEntrustedResult(<span class="built_in">Integer</span> userId, <span class="built_in">String</span> stockCode, <span class="built_in">Integer</span> warnId) ;</div><div class="line"></div><div class="line">	int markAsRead(<span class="built_in">Integer</span> userId, <span class="built_in">String</span> stockCode, <span class="built_in">Integer</span> warnId) ;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用paranamer-maven-plugin编译之后如下：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">public static final String __PARANAMER_DATA = <span class="string">"countConditionNum java.lang.Integer userId <span class="subst">\n</span>countEntrustedResult java.lang.Integer,java.lang.String,java.lang.Integer userId,stockCode,warnId <span class="subst">\n</span>delete java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>detail java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>detailWithMarket java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>entrustManual java.lang.Integer,java.lang.Integer,EntrustDto userId,warnId,entrustDto <span class="subst">\n</span>findCurrentEntrust java.lang.Integer,java.lang.String,PageVo userId,stockCode,pager <span class="subst">\n</span>findMonitorPageWithMarket java.lang.Integer,java.lang.String,ConditionPageVo userId,code,pager <span class="subst">\n</span>findPage java.lang.Integer,java.lang.String,ConditionPageVo userId,strategyState,pager <span class="subst">\n</span>findTriggeredPage java.lang.Integer,java.lang.Integer,PageVo userId,handled,pager <span class="subst">\n</span>markAsRead java.lang.Integer,java.lang.String,java.lang.Integer userId,stockCode,warnId <span class="subst">\n</span>pause java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>queryEntrustRecord java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>queryEntrustResult java.lang.Integer,java.lang.String,java.lang.String userId,stockCode,historyIds <span class="subst">\n</span>queryEntrustedResult java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer userId,stockCode,warnId,cursor,pageSize <span class="subst">\n</span>queryHistory java.lang.Integer,java.lang.String,PageVo userId,stockCode,pager <span class="subst">\n</span>resume java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>save java.lang.Integer,ConditionTradeDto userId,conditionTradeDto <span class="subst">\n</span>saveBatching java.lang.Integer,ConditionTradeBatchingDto userId,conditionTradeDto <span class="subst">\n</span>saveGrid java.lang.Integer,GridTradeDto userId,conditionTradeDto <span class="subst">\n</span>saveNewShares java.lang.Integer,NewSharesDto userId,newSharesDto <span class="subst">\n</span>saveProfit java.lang.Integer,ProfitConditionTradeDto userId,profitConditionTradeDto <span class="subst">\n</span>saveTurnPoint java.lang.Integer,ConditionTradeTurnPointDto userId,conditionTradeDto <span class="subst">\n</span>saveVipBatching java.lang.Integer,ConditionTradeBatchingDto userId,conditionTradeDto <span class="subst">\n</span>"</span>;</div></pre></td></tr></table></figure>
<p>仔细观察可以发现生成的__PARANAMER_DATA常量中，并未包含对象类型变量的具体package路径，此时使用new CachingParanamer()l.ookupParameterNames(method)无法正常获取方法的变量名称。</p>
<p>去掉import .* 的方式之后，再次编译，常量中包含了对象类型变量具体的package路径，此时可成功获取方法的变量名称。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">public static final String __PARANAMER_DATA = <span class="string">"countConditionNum java.lang.Integer userId <span class="subst">\n</span>countEntrustedResult java.lang.Integer,java.lang.String,java.lang.Integer userId,stockCode,warnId <span class="subst">\n</span>delete java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>detail java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>detailWithMarket java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>entrustManual java.lang.Integer,java.lang.Integer,hbec.commons.domain.stock.dto.EntrustDto userId,warnId,entrustDto <span class="subst">\n</span>findCurrentEntrust java.lang.Integer,java.lang.String,hbec.commons.domain.stock.vo.PageVo userId,stockCode,pager <span class="subst">\n</span>findMonitorPageWithMarket java.lang.Integer,java.lang.String,hbec.commons.domain.stock.vo.ConditionPageVo userId,code,pager <span class="subst">\n</span>findPage java.lang.Integer,java.lang.String,hbec.commons.domain.stock.vo.ConditionPageVo userId,strategyState,pager <span class="subst">\n</span>findTriggeredPage java.lang.Integer,java.lang.Integer,hbec.commons.domain.stock.vo.PageVo userId,handled,pager <span class="subst">\n</span>markAsRead java.lang.Integer,java.lang.String,java.lang.Integer userId,stockCode,warnId <span class="subst">\n</span>pause java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>queryEntrustRecord java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>queryEntrustResult java.lang.Integer,java.lang.String,java.lang.String userId,stockCode,historyIds <span class="subst">\n</span>queryEntrustedResult java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer userId,stockCode,warnId,cursor,pageSize <span class="subst">\n</span>queryHistory java.lang.Integer,java.lang.String,hbec.commons.domain.stock.vo.PageVo userId,stockCode,pager <span class="subst">\n</span>resume java.lang.Integer,java.lang.Integer userId,warnId <span class="subst">\n</span>save java.lang.Integer,hbec.commons.domain.stock.dto.ConditionTradeDto userId,conditionTradeDto <span class="subst">\n</span>saveBatching java.lang.Integer,hbec.commons.domain.stock.dto.ConditionTradeBatchingDto userId,conditionTradeDto <span class="subst">\n</span>saveGrid java.lang.Integer,hbec.commons.domain.stock.dto.GridTradeDto userId,conditionTradeDto <span class="subst">\n</span>saveNewShares java.lang.Integer,hbec.commons.domain.stock.dto.NewSharesDto userId,newSharesDto <span class="subst">\n</span>saveProfit java.lang.Integer,hbec.commons.domain.stock.condition.dto.ProfitConditionTradeDto userId,profitConditionTradeDto <span class="subst">\n</span>saveTurnPoint java.lang.Integer,hbec.commons.domain.stock.dto.ConditionTradeTurnPointDto userId,conditionTradeDto <span class="subst">\n</span>saveVipBatching java.lang.Integer,hbec.commons.domain.stock.dto.ConditionTradeBatchingDto userId,conditionTradeDto <span class="subst">\n</span>"</span>;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      使用maven paranamer plugin获取java方法中的参数名称
    
    </summary>
    
      <category term="Maven" scheme="https://roc-wong.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://roc-wong.github.io/tags/Maven/"/>
    
      <category term="maven paranamer plugin" scheme="https://roc-wong.github.io/tags/maven-paranamer-plugin/"/>
    
  </entry>
  
  <entry>
    <title>Shell脚本调试技术</title>
    <link href="https://roc-wong.github.io/blog/2017/03/Shell%E8%84%9A%E6%9C%AC%E8%B0%83%E8%AF%95%E6%8A%80%E6%9C%AF.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/Shell脚本调试技术.html</id>
    <published>2017-03-26T14:13:40.000Z</published>
    <updated>2017-03-26T14:30:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>shell编程在unix/linux世界中使用得非常广泛，熟练掌握shell编程也是成为一名优秀的unix/linux开发者和系统管理员的必经之路。脚本调试的主要工作就是发现引发脚本错误的原因以及在脚本源代码中定位发生错误的行，常用的手段包括分析输出的错误信息，通过在脚本中加入调试语句，输出调试信息来辅助诊断错误，利用调试工具等。但与其它高级语言相比，shell解释器缺乏相应的调试机制和调试工具的支持，其输出的错误信息又往往很不明确，初学者在调试脚本时，除了知道用echo语句输出一些信息外，别无它法，而仅仅依赖于大量的加入echo语句来诊断错误，确实令人不胜其繁，故常见初学者抱怨shell脚本太难调试了。本文将系统地介绍一些重要的shell脚本调试技术，希望能对shell的初学者有所裨益。</p>
<a id="more"></a>
<p>本篇博客整理自 Shell脚本调试技术</p>
<blockquote>
<ul>
<li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-shell-debug/" target="_blank" rel="external">Shell脚本调试技术</a></li>
</ul>
</blockquote>
<p>本文的目标读者是unix/linux环境下的开发人员，测试人员和系统管理员，要求读者具有基本的shell编程知识。本文所使用范例在Bash3.1+Redhat Enterprise Server 4.0下测试通过，但所述调试技巧应也同样适用于其它shell。</p>
<h1 id="在shell脚本中输出调试信息"><a href="#在shell脚本中输出调试信息" class="headerlink" title="在shell脚本中输出调试信息"></a>在shell脚本中输出调试信息</h1><p>通过在程序中加入调试语句把一些关键地方或出错的地方的相关信息显示出来是最常见的调试手段。Shell程序员通常使用echo(ksh程序员常使用print)语句输出信息，但仅仅依赖echo语句的输出跟踪信息很麻烦，调试阶段在脚本中加入的大量的echo语句在产品交付时还得再费力一一删除。针对这个问题，本节主要介绍一些如何方便有效的输出调试信息的方法。</p>
<h2 id="使用trap命令"><a href="#使用trap命令" class="headerlink" title="使用trap命令"></a>使用trap命令</h2><p>trap命令用于捕获指定的信号并执行预定义的命令。其基本的语法是:</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">trap <span class="string">'command'</span> <span class="keyword">signal</span><span class="string"></span></div></pre></td></tr></table></figure>
<p>其中signal是要捕获的信号，command是捕获到指定的信号之后，所要执行的命令。可以用kill –l命令看到系统中全部可用的信号名，捕获信号后所执行的命令可以是任何一条或多条合法的shell语句，也可以是一个函数名。</p>
<p>shell脚本在执行时，会产生三个所谓的“伪信号”，(之所以称之为“伪信号”是因为这三个信号是由shell产生的，而其它的信号是由操作系统产生的)，通过使用trap命令捕获这三个“伪信号”并输出相关信息对调试非常有帮助。</p>
<p>表 1. shell伪信号</p>
<table>
<thead>
<tr>
<th>信号名</th>
<th>何时产生</th>
</tr>
</thead>
<tbody>
<tr>
<td>EXIT</td>
<td>从一个函数中退出或整个脚本执行完毕</td>
</tr>
<tr>
<td>ERR</td>
<td>当一条命令返回非零状态时(代表命令执行不成功)</td>
</tr>
<tr>
<td>DEBUG</td>
<td>脚本中每一条命令执行之前</td>
</tr>
</tbody>
</table>
<p>通过捕获EXIT信号,我们可以在shell脚本中止执行或从函数中退出时，输出某些想要跟踪的变量的值，并由此来判断脚本的执行状态以及出错原因,其使用方法是：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">trap</span> <span class="string">'command'</span> <span class="keyword">EXIT</span>　或　<span class="keyword">trap</span> <span class="string">'command'</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<p>通过捕获ERR信号,我们可以方便的追踪执行不成功的命令或函数，并输出相关的调试信息，以下是一个捕获ERR信号的示例程序，其中的$LINENO是一个shell的内置变量，代表shell脚本的当前行号。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ cat -n exp1.sh</div><div class="line"><span class="function"><span class="title">ERRTRAP</span></span>()</div><div class="line">&#123;</div><div class="line">  <span class="built_in">echo</span> <span class="string">"[LINE:<span class="variable">$1</span>] Error: Command or function exited with status $?"</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="title">foo</span></span>()</div><div class="line">&#123;</div><div class="line"><span class="built_in">return</span> 1;</div><div class="line">&#125;</div><div class="line"><span class="built_in">trap</span> <span class="string">'ERRTRAP $LINENO'</span> ERR</div><div class="line">abc</div><div class="line">foo</div></pre></td></tr></table></figure>
<p>其输出结果如下：</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sh exp1.sh</div><div class="line">exp1.sh: <span class="literal">line</span> <span class="number">10</span>: abc: command <span class="keyword">not</span> found</div><div class="line">[<span class="literal">LINE</span>:<span class="number">10</span>] <span class="literal">Error</span>: Command <span class="keyword">or</span> <span class="keyword">function</span> exited <span class="keyword">with</span> status <span class="number">127</span></div><div class="line">[<span class="literal">LINE</span>:<span class="number">11</span>] <span class="literal">Error</span>: Command <span class="keyword">or</span> <span class="keyword">function</span> exited <span class="keyword">with</span> status <span class="number">1</span></div></pre></td></tr></table></figure>
<p>在调试过程中，为了跟踪某些变量的值，我们常常需要在shell脚本的许多地方插入相同的echo语句来打印相关变量的值，这种做法显得烦琐而笨拙。而通过捕获DEBUG信号，我们只需要一条trap语句就可以完成对相关变量的全程跟踪。</p>
<p>以下是一个通过捕获DEBUG信号来跟踪变量的示例程序:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ cat –n exp2.sh</div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="built_in">trap</span> <span class="string">'echo “before execute line:$LINENO, a=$a,b=$b,c=$c”'</span> DEBUG</div><div class="line">a=1</div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$a</span>"</span> <span class="_">-eq</span> 1 ]</div><div class="line"><span class="keyword">then</span></div><div class="line">   b=2</div><div class="line"><span class="keyword">else</span></div><div class="line">   b=1</div><div class="line"><span class="keyword">fi</span></div><div class="line">c=3</div><div class="line"><span class="built_in">echo</span> <span class="string">"end"</span></div></pre></td></tr></table></figure>
<p>其输出结果如下：</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ sh exp2.sh</div><div class="line">before<span class="built_in"> execute </span>line:3, a=,b=,c=</div><div class="line">before<span class="built_in"> execute </span>line:4, a=1,b=,c=</div><div class="line">before<span class="built_in"> execute </span>line:6, a=1,b=,c=</div><div class="line">before<span class="built_in"> execute </span>line:10, a=1,b=2,c=</div><div class="line">before<span class="built_in"> execute </span>line:11, a=1,b=2,c=3</div><div class="line">end</div></pre></td></tr></table></figure>
<p>从运行结果中可以清晰的看到每执行一条命令之后，相关变量的值的变化。同时，从运行结果中打印出来的行号来分析，可以看到整个脚本的执行轨迹，能够判断出哪些条件分支执行了，哪些条件分支没有执行。</p>
<h2 id="使用tee命令"><a href="#使用tee命令" class="headerlink" title="使用tee命令"></a>使用tee命令</h2><p>在shell脚本中管道以及输入输出重定向使用得非常多，在管道的作用下，一些命令的执行结果直接成为了下一条命令的输入。如果我们发现由管道连接起来的一批命令的执行结果并非如预期的那样，就需要逐步检查各条命令的执行结果来判断问题出在哪儿，但因为使用了管道，这些中间结果并不会显示在屏幕上，给调试带来了困难，此时我们就可以借助于tee命令了。</p>
<p>tee命令会从标准输入读取数据，将其内容输出到标准输出设备,同时又可将内容保存成文件。例如有如下的脚本片段，其作用是获取本机的ip地址：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ipaddr=`/sbin/ifconfig | grep <span class="string">'inet addr:'</span> | grep -v <span class="string">'127.0.0.1'</span></div><div class="line">| cut <span class="_">-d</span> : <span class="_">-f</span>3 | awk <span class="string">'&#123;print $1&#125;'</span>`</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="variable">$ipaddr</span></div></pre></td></tr></table></figure>
<p>#注意=号后面的整句是用反引号(数字1键的左边那个键)括起来的。</p>
<p>运行这个脚本，实际输出的却不是本机的ip地址，而是广播地址,这时我们可以借助tee命令，输出某些中间结果，将上述脚本片段修改为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ipaddr=`/sbin/ifconfig | grep <span class="string">'inet addr:'</span> | grep -v <span class="string">'127.0.0.1'</span></div><div class="line">| tee temp.txt | cut <span class="_">-d</span> : <span class="_">-f</span>3 | awk <span class="string">'&#123;print $1&#125;'</span>`</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="variable">$ipaddr</span></div></pre></td></tr></table></figure>
<p>之后，将这段脚本再执行一遍，然后查看temp.txt文件的内容：</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat temp.txt</div><div class="line">inet addr:<span class="number">192.168</span><span class="meta">.0</span><span class="meta">.1</span>  Bcast:<span class="number">192.168</span><span class="meta">.0</span><span class="meta">.255</span>  Mask:<span class="number">255.255</span><span class="meta">.255</span><span class="meta">.0</span></div></pre></td></tr></table></figure>
<p>我们可以发现中间结果的第二列(列之间以:号分隔)才包含了IP地址，而在上面的脚本中使用cut命令截取了第三列，故我们只需将脚本中的cut -d : -f3改为cut -d : -f2即可得到正确的结果。</p>
<p>具体到上述的script例子，我们也许并不需要tee命令的帮助，比如我们可以分段执行由管道连接起来的各条命令并查看各命令的输出结果来诊断错误，但在一些复杂的shell脚本中，这些由管道连接起来的命令可能又依赖于脚本中定义的一些其它变量，这时我们想要在提示符下来分段运行各条命令就会非常麻烦了，简单地在管道之间插入一条tee命令来查看中间结果会更方便一些。</p>
<h2 id="使用”调试钩子”"><a href="#使用”调试钩子”" class="headerlink" title="使用”调试钩子”"></a>使用”调试钩子”</h2><p>在C语言程序中，我们经常使用DEBUG宏来控制是否要输出调试信息，在shell脚本中我们同样可以使用这样的机制，如下列代码所示：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ “<span class="variable">$DEBUG</span>” = “<span class="literal">true</span>” ]; <span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> “debugging”  <span class="comment">#此处可以输出调试信息</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>这样的代码块通常称之为“调试钩子”或“调试块”。在调试钩子内部可以输出任何您想输出的调试信息，使用调试钩子的好处是它是可以通过DEBUG变量来控制的，在脚本的开发调试阶段，可以先执行export DEBUG=true命令打开调试钩子，使其输出调试信息，而在把脚本交付使用时，也无需再费事把脚本中的调试语句一一删除。</p>
<p>如果在每一处需要输出调试信息的地方均使用if语句来判断DEBUG变量的值，还是显得比较繁琐，通过定义一个DEBUG函数可以使植入调试钩子的过程更简洁方便，如下面代码所示:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ cat –n exp3.sh</div><div class="line">       <span class="function"><span class="title">DEBUG</span></span>()</div><div class="line">       &#123;</div><div class="line">       <span class="keyword">if</span> [ <span class="string">"<span class="variable">$DEBUG</span>"</span> = <span class="string">"true"</span> ]; <span class="keyword">then</span></div><div class="line">           <span class="variable">$@</span>　　</div><div class="line">       <span class="keyword">fi</span></div><div class="line">       &#125;</div><div class="line">       a=1</div><div class="line">       DEBUG <span class="built_in">echo</span> <span class="string">"a=<span class="variable">$a</span>"</span></div><div class="line">       <span class="keyword">if</span> [ <span class="string">"<span class="variable">$a</span>"</span> <span class="_">-eq</span> 1 ]</div><div class="line">      <span class="keyword">then</span></div><div class="line">           b=2</div><div class="line">      <span class="keyword">else</span></div><div class="line">           b=1</div><div class="line">      <span class="keyword">fi</span></div><div class="line">      DEBUG <span class="built_in">echo</span> <span class="string">"b=<span class="variable">$b</span>"</span></div><div class="line">      c=3</div><div class="line">      DEBUG <span class="built_in">echo</span> <span class="string">"c=<span class="variable">$c</span>"</span></div></pre></td></tr></table></figure>
<p>在上面所示的DEBUG函数中，会执行任何传给它的命令，并且这个执行过程是可以通过DEBUG变量的值来控制的，我们可以把所有跟调试有关的命令都作为DEBUG函数的参数来调用，非常的方便。<br>回页首</p>
<h2 id="使用shell的执行选项"><a href="#使用shell的执行选项" class="headerlink" title="使用shell的执行选项"></a>使用shell的执行选项</h2><p>上一节所述的调试手段是通过修改shell脚本的源代码，令其输出相关的调试信息来定位错误的，那有没有不修改源代码来调试shell脚本的方法呢？答案就是使用shell的执行选项，本节将介绍一些常用选项的用法：</p>
<ul>
<li>-n 只读取shell脚本，但不实际执行</li>
<li>-x 进入跟踪方式，显示所执行的每一条命令</li>
<li>-c “string” 从strings中读取命令</li>
</ul>
<p>“-n”可用于测试shell脚本是否存在语法错误，但不会实际执行命令。在shell脚本编写完成之后，实际执行之前，首先使用“-n”选项来测试脚本是否存在语法错误是一个很好的习惯。因为某些shell脚本在执行时会对系统环境产生影响，比如生成或移动文件等，如果在实际执行才发现语法错误，您不得不手工做一些系统环境的恢复工作才能继续测试这个脚本。</p>
<p>“-c”选项使shell解释器从一个字符串中而不是从一个文件中读取并执行shell命令。当需要临时测试一小段脚本的执行结果时，可以使用这个选项，如下所示：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">sh</span> -c <span class="string">'a=1;b=2;let c=<span class="variable">$a</span>+<span class="variable">$b</span>;echo "c=<span class="variable">$c</span>"'</span></div></pre></td></tr></table></figure></p>
<p>“-x”选项可用来跟踪脚本的执行，是调试shell脚本的强有力工具。“-x”选项使shell在执行脚本的过程中把它实际执行的每一个命令行显示出来，并且在行首显示一个”+”号。 “+”号后面显示的是经过了变量替换之后的命令行的内容，有助于分析实际执行的是什么命令。 “-x”选项使用起来简单方便，可以轻松对付大多数的shell调试任务,应把其当作首选的调试手段。</p>
<p>如果把本文前面所述的trap ‘command’ DEBUG机制与“-x”选项结合起来，我们 就可以既输出实际执行的每一条命令，又逐行跟踪相关变量的值，对调试相当有帮助。</p>
<p>仍以前面所述的exp2.sh为例，现在加上“-x”选项来执行它：</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ sh –x exp2.sh</div><div class="line">+ trap 'echo <span class="string">"before execute line:$LINENO, a=$a,b=$b,c=$c"</span>' DEBUG</div><div class="line">++ echo 'before<span class="built_in"> execute </span>line:3, a=,b=,c='</div><div class="line">before<span class="built_in"> execute </span>line:3, a=,b=,c=</div><div class="line">+ a=1</div><div class="line">++ echo 'before<span class="built_in"> execute </span>line:4, a=1,b=,c='</div><div class="line">before<span class="built_in"> execute </span>line:4, a=1,b=,c=</div><div class="line">+ '[' 1 -eq 1 ']'</div><div class="line">++ echo 'before<span class="built_in"> execute </span>line:6, a=1,b=,c='</div><div class="line">before<span class="built_in"> execute </span>line:6, a=1,b=,c=</div><div class="line">+ b=2</div><div class="line">++ echo 'before<span class="built_in"> execute </span>line:10, a=1,b=2,c='</div><div class="line">before<span class="built_in"> execute </span>line:10, a=1,b=2,c=</div><div class="line">+ c=3</div><div class="line">++ echo 'before<span class="built_in"> execute </span>line:11, a=1,b=2,c=3'</div><div class="line">before<span class="built_in"> execute </span>line:11, a=1,b=2,c=3</div><div class="line">+ echo end</div><div class="line">end</div></pre></td></tr></table></figure>
<p>在上面的结果中，前面有“+”号的行是shell脚本实际执行的命令，前面有“++”号的行是执行trap机制中指定的命令，其它的行则是输出信息。</p>
<p>shell的执行选项除了可以在启动shell时指定外，亦可在脚本中用set命令来指定。 “set -参数”表示启用某选项，”set +参数”表示关闭某选项。有时候我们并不需要在启动时用”-x”选项来跟踪所有的命令行，这时我们可以在脚本中使用set命令，如以下脚本片段所示：</p>
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> -x　　　 #启动<span class="string">"-x"</span>选项</div><div class="line">要跟踪的程序段</div><div class="line"><span class="keyword">set</span> <span class="comment">+x</span>　　　　<span class="comment"> #</span>关闭<span class="comment">"-x"</span>选项</div></pre></td></tr></table></figure>
<p>set命令同样可以使用上一节中介绍的调试钩子—DEBUG函数来调用，这样可以避免脚本交付使用时删除这些调试语句的麻烦，如以下脚本片段所示：</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DEBUG <span class="keyword">set</span> -x　　　 <span class="comment">#启动"-x"选项</span></div><div class="line">要跟踪的程序段</div><div class="line">DEBUG <span class="keyword">set</span> +x　　　 <span class="comment">#关闭"-x"选项</span></div><div class="line">回页首</div></pre></td></tr></table></figure>
<h2 id="对”-x”选项的增强"><a href="#对”-x”选项的增强" class="headerlink" title="对”-x”选项的增强"></a>对”-x”选项的增强</h2><p>“-x”执行选项是目前最常用的跟踪和调试shell脚本的手段，但其输出的调试信息仅限于进行变量替换之后的每一条实际执行的命令以及行首的一个”+”号提示符，居然连行号这样的重要信息都没有，对于复杂的shell脚本的调试来说，还是非常的不方便。幸运的是，我们可以巧妙地利用shell内置的一些环境变量来增强”-x”选项的输出信息，下面先介绍几个shell内置的环境变量：</p>
<h3 id="LINENO"><a href="#LINENO" class="headerlink" title="$LINENO"></a>$LINENO</h3><p>代表shell脚本的当前行号，类似于C语言中的内置宏<strong>LINE</strong></p>
<h3 id="FUNCNAME"><a href="#FUNCNAME" class="headerlink" title="$FUNCNAME"></a>$FUNCNAME</h3><p>函数的名字，类似于C语言中的内置宏<strong>func</strong>,但宏<strong>func</strong>只能代表当前所在的函数名，而$FUNCNAME的功能更强大，它是一个数组变量，其中包含了整个调用链上所有的函数的名字，故变量${FUNCNAME[0]}代表shell脚本当前正在执行的函数的名字，而变量${FUNCNAME[1]}则代表调用函数${FUNCNAME[0]}的函数的名字，余者可以依此类推。</p>
<h3 id="PS4"><a href="#PS4" class="headerlink" title="$PS4"></a>$PS4</h3><p>主提示符变量$PS1和第二级提示符变量$PS2比较常见，但很少有人注意到第四级提示符变量$PS4的作用。我们知道使用“-x”执行选项将会显示shell脚本中每一条实际执行过的命令，而$PS4的值将被显示在“-x”选项输出的每一条命令的前面。在Bash Shell中，缺省的$PS4的值是”+”号。(现在知道为什么使用”-x”选项时，输出的命令前面有一个”+”号了吧？)。</p>
<p>利用$PS4这一特性，通过使用一些内置变量来重定义$PS4的值，我们就可以增强”-x”选项的输出信息。例如先执行export PS4=’+{$LINENO:${FUNCNAME[0]}} ‘, 然后再使用“-x”选项来执行脚本，就能在每一条实际执行的命令前面显示其行号以及所属的函数名。</p>
<p>以下是一个存在bug的shell脚本的示例，本文将用此脚本来示范如何用“-n”以及增强的“-x”执行选项来调试shell脚本。这个脚本中定义了一个函数isRoot(),用于判断当前用户是不是root用户，如果不是，则中止脚本的执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ cat –n exp4.sh</div><div class="line"> <span class="comment">#!/bin/bash</span></div><div class="line"> <span class="function"><span class="title">isRoot</span></span>()</div><div class="line"> &#123;</div><div class="line">         <span class="keyword">if</span> [ <span class="string">"<span class="variable">$UID</span>"</span> <span class="_">-ne</span> 0 ]</div><div class="line">                 <span class="built_in">return</span> 1</div><div class="line">         <span class="keyword">else</span></div><div class="line">                 <span class="built_in">return</span> 0</div><div class="line">         <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line">isRoot</div><div class="line"><span class="keyword">if</span> [<span class="string">"$?"</span> <span class="_">-ne</span> 0 ]</div><div class="line"><span class="keyword">then</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"Must be root to run this script"</span></div><div class="line">        <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">else</span></div><div class="line">        <span class="built_in">echo</span> <span class="string">"welcome root user"</span></div><div class="line">        <span class="comment">#do something</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>首先执行sh –n exp4.sh来进行语法检查，输出如下：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">sh</span> –<span class="keyword">n</span> exp4.<span class="keyword">sh</span></div><div class="line">exp4.<span class="keyword">sh</span>: <span class="keyword">line</span> 6: <span class="keyword">syntax</span> <span class="keyword">error</span> near unexpected <span class="keyword">token</span> <span class="symbol">`else'</span></div><div class="line">exp4.<span class="keyword">sh</span>: <span class="keyword">line</span> 6: `      <span class="keyword">else</span>'</div></pre></td></tr></table></figure>
<p>发现了一个语法错误，通过仔细检查第6行前后的命令，我们发现是第4行的if语句缺少then关键字引起的(写惯了C程序的人很容易犯这个错误)。我们可以把第4行修改为if [ “$UID” -ne 0 ]; then来修正这个错误。再次运行sh –n exp4.sh来进行语法检查，没有再报告错误。接下来就可以实际执行这个脚本了，执行结果如下：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">sh</span> exp4.<span class="keyword">sh</span></div><div class="line">exp2.<span class="keyword">sh</span>: <span class="built_in">line</span> <span class="number">11</span>: [<span class="number">1</span>: <span class="keyword">command</span> not found</div><div class="line">welcome root user</div></pre></td></tr></table></figure>
<p>尽管脚本没有语法错误了，在执行时却又报告了错误。错误信息还非常奇怪“[1: command not found”。现在我们可以试试定制$PS4的值，并使用“-x”选项来跟踪：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ export PS4=<span class="string">'+&#123;$LINENO:$&#123;FUNCNAME[0]&#125;&#125; '</span></div><div class="line">$ <span class="keyword">sh</span> –<span class="keyword">x</span> exp4.<span class="keyword">sh</span></div><div class="line">+&#123;<span class="number">10</span>:&#125; isRoot</div><div class="line">+&#123;<span class="number">4</span>:isRoot&#125; <span class="string">'['</span> <span class="number">503</span> -ne <span class="number">0</span> <span class="string">']'</span></div><div class="line">+&#123;<span class="number">5</span>:isRoot&#125; <span class="keyword">return</span> <span class="number">1</span></div><div class="line">+&#123;<span class="number">11</span>:&#125; <span class="string">'[1'</span> -ne <span class="number">0</span> <span class="string">']'</span></div><div class="line">exp4.<span class="keyword">sh</span>: <span class="built_in">line</span> <span class="number">11</span>: [<span class="number">1</span>: <span class="keyword">command</span> not found</div><div class="line">+&#123;<span class="number">16</span>:&#125; <span class="keyword">echo</span> <span class="string">'welcome root user'</span></div><div class="line">welcome root user</div></pre></td></tr></table></figure>
<p>从输出结果中，我们可以看到脚本实际被执行的语句，该语句的行号以及所属的函数名也被打印出来，从中可以清楚的分析出脚本的执行轨迹以及所调用的函数的内部执行情况。由于执行时是第11行报错，这是一个if语句，我们对比分析一下同为if语句的第4行的跟踪结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">+&#123;4:isRoot&#125; <span class="string">'['</span> 503 <span class="_">-ne</span> 0 <span class="string">']'</span></div><div class="line">+&#123;11:&#125; <span class="string">'[1'</span> <span class="_">-ne</span> 0 <span class="string">']'</span></div></pre></td></tr></table></figure>
<p>可知由于第11行的[号后面缺少了一个空格，导致[号与紧挨它的变量$?的值1被shell解释器看作了一个整体，并试着把这个整体视为一个命令来执行，故有“[1: command not found”这样的错误提示。只需在[号后面插入一个空格就一切正常了。</p>
<p>shell中还有其它一些对调试有帮助的内置变量，比如在Bash Shell中还有BASH_SOURCE, BASH_SUBSHELL等一批对调试有帮助的内置变量，您可以通过man sh或man bash来查看，然后根据您的调试目的,使用这些内置变量来定制$PS4，从而达到增强“-x”选项的输出信息的目的。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>现在让我们来总结一下调试shell脚本的过程：</p>
<p>首先使用“-n”选项检查语法错误，然后使用“-x”选项跟踪脚本的执行，使用“-x”选项之前，别忘了先定制PS4变量的值来增强“-x”选项的输出信息，至少应该令其输出行号信息(先执行export PS4=’+[$LINENO]’，更一劳永逸的办法是将这条语句加到您用户主目录的.bash_profile文件中去)，这将使你的调试之旅更轻松。也可以利用trap,调试钩子等手段输出关键调试信息，快速缩小排查错误的范围，并在脚本中使用“set -x”及“set +x”对某些代码块进行重点跟踪。这样多种手段齐下，相信您已经可以比较轻松地抓出您的shell脚本中的臭虫了。如果您的脚本足够复杂，还需要更强的调试能力，可以使用shell调试器bashdb，这是一个类似于GDB的调试工具，可以完成对shell脚本的断点设置，单步执行，变量观察等许多功能，使用bashdb对阅读和理解复杂的shell脚本也会大有裨益。关于bashdb的安装和使用，不属于本文范围，您可参阅<a href="http://bashdb.sourceforge.net/上的文档并下载试用。" target="_blank" rel="external">http://bashdb.sourceforge.net/上的文档并下载试用。</a></p>
]]></content>
    
    <summary type="html">
    
      Shell脚本调试技术
    
    </summary>
    
      <category term="Linux" scheme="https://roc-wong.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://roc-wong.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://roc-wong.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>shell 函数返回字符串的方法</title>
    <link href="https://roc-wong.github.io/blog/2017/03/shell-%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/shell-函数返回字符串的方法.html</id>
    <published>2017-03-26T13:53:37.000Z</published>
    <updated>2017-03-26T14:09:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>shell的函数只能返回整数值，如果想让函数返回字符串，一般有两种方法：将返回值赋值给一个字符串变量、输出返回值，在函数调用处为变量赋值。</p>
<a id="more"></a>
<h2 id="Shell函数"><a href="#Shell函数" class="headerlink" title="Shell函数"></a>Shell函数</h2><p>Shell 函数的定义格式如下：</p>
<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span><span class="number">_n</span>ame () &#123;</div><div class="line">    list <span class="keyword">of</span> commands</div><div class="line">    [ <span class="keyword">return</span> <span class="keyword">value</span> ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果你愿意，也可以在函数名前加上关键字 function：<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">function_name</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">list</span> <span class="keyword">of</span> commands</div><div class="line">    [ <span class="keyword">return</span> value ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>函数返回值，可以显式增加return语句；如果不加，会将最后一条命令运行结果作为返回值。</p>
<p>Shell 函数返回值只能是整数，一般用来表示函数执行成功与否，0表示成功，其他值表示失败。如果 return 其他数据，比如一个字符串，往往会得到错误提示：“numeric argument required”。</p>
<p>如果一定要让函数返回字符串，那么可以先定义一个变量，用来接收函数的计算结果，脚本在需要的时候访问这个变量来获得函数返回值。</p>
<h2 id="将返回值赋值给一个字符串变量"><a href="#将返回值赋值给一个字符串变量" class="headerlink" title="将返回值赋值给一个字符串变量"></a>将返回值赋值给一个字符串变量</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">get_project_version()&#123;</div><div class="line">  VERSION=`grep version $<span class="number">1</span>/pom.xml | head -n <span class="number">1</span> | sed -E <span class="string">'s:&lt;/?version&gt;::g'</span> | sed -E <span class="string">'s/^\t*//'</span> | sed -E <span class="string">'s/^ *//'</span> | sed -E <span class="string">'s/\r$//'</span>`</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="输出返回值，在函数调用处为变量赋值"><a href="#输出返回值，在函数调用处为变量赋值" class="headerlink" title="输出返回值，在函数调用处为变量赋值"></a>输出返回值，在函数调用处为变量赋值</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">get_project_version()&#123;</div><div class="line">  echo `grep version $<span class="number">1</span>/pom.xml | head -n <span class="number">1</span> | sed -E <span class="string">'s:&lt;/?version&gt;::g'</span> | sed -E <span class="string">'s/^\t*//'</span> | sed -E <span class="string">'s/^ *//'</span> | sed -E <span class="string">'s/\r$//'</span>`</div><div class="line">&#125;</div><div class="line"></div><div class="line">version=`get_project_version $PROJECT_PATH`</div></pre></td></tr></table></figure>
<h2 id="特殊变量列表"><a href="#特殊变量列表" class="headerlink" title="特殊变量列表"></a>特殊变量列表</h2><table>
<thead>
<tr>
<th>变量</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>$0</td>
<td>是脚本本身的名字；</td>
</tr>
<tr>
<td>$#</td>
<td>是传给脚本的参数个数；</td>
</tr>
<tr>
<td>$@</td>
<td>是传给脚本的所有参数的列表，即被扩展为”$1” “$2” “$3”等；</td>
</tr>
<tr>
<td>$*</td>
<td>是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个，即被扩展成”$1c$2c$3”，其中c是IFS的第一个字符；</td>
</tr>
<tr>
<td>$$</td>
<td>是脚本运行的当前进程ID号；</td>
</tr>
<tr>
<td>$?</td>
<td>是显示最后命令的退出状态，0表示没有错误，其他表示有错误；</td>
</tr>
<tr>
<td>$n</td>
<td>获取参数的值，$1表示第一个参数，当n&gt;=10时，需要使用${n}来获取参数。</td>
</tr>
</tbody>
</table>
<p>如果你希望直接从终端调用函数，可以将函数定义在主目录下的 .profile 文件，这样每次登录后，在命令提示符后面输入函数名字就可以立即调用。</p>
]]></content>
    
    <summary type="html">
    
      shell函数返回字符串
    
    </summary>
    
      <category term="Linux" scheme="https://roc-wong.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://roc-wong.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://roc-wong.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>shell 文件包含</title>
    <link href="https://roc-wong.github.io/blog/2017/03/shell-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/shell-文件包含.html</id>
    <published>2017-03-26T13:46:15.000Z</published>
    <updated>2017-03-26T13:51:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>像其他语言一样，Shell 也可以包含外部脚本，将外部脚本的内容合并到当前脚本。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>.   . ./subscript.<span class="keyword">sh</span> (常用)     </div><div class="line"><span class="number">2</span>.   <span class="keyword">source</span> ./subscript.<span class="keyword">sh</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>两种方式的效果相同，简单起见，一般使用点号(.)，但是注意点号(.)和文件名中间有一空格。两个脚本不在同一目录时，要用绝对路径。</p>
<p>PS:被包含脚本不需要有执行权限，调用脚本必须有可执行权限。</p>
]]></content>
    
    <summary type="html">
    
      Shell脚本中引用、调用另一个脚本文件的方式
    
    </summary>
    
      <category term="Linux" scheme="https://roc-wong.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://roc-wong.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://roc-wong.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>shell 获取正在执行脚本的绝对路径</title>
    <link href="https://roc-wong.github.io/blog/2017/03/shell-%E8%8E%B7%E5%8F%96%E6%AD%A3%E5%9C%A8%E6%89%A7%E8%A1%8C%E8%84%9A%E6%9C%AC%E7%9A%84%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/shell-获取正在执行脚本的绝对路径.html</id>
    <published>2017-03-26T13:25:23.000Z</published>
    <updated>2017-03-26T13:45:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在写脚本的时候，想获取下当前执行脚本的绝对路径，试了试pwd，发现并不是正确的路径。找资料后发现 pwd 命令的作用是“print name of current/working directory-当前的工作目录”。 试了试$0，发现也不对，$0是Bash环境下的特殊变量，其真实含义是：</p>
<a id="more"></a>
<p>　　Expands to the name of the shell or shell script. This is set at shell initialization.  If bash is invoked with a file of commands, $0 is set to the name of that file. If bash is started with the -c option, then $0 is set to the first argument after the string to be executed, if one is present. Otherwise, it is set to the file name used to invoke bash, as given by argument zero.</p>
<p>$0的结果与调用方式有关：</p>
<ul>
<li>使用一个文件调用bash，那$0的值，是那个文件的名字(不能确定绝对路径)</li>
<li>使用-c选项启动bash的话，真正执行的命令会从一个字符串中读取，字符串后面如果还有别的参数的话，使用从$0开始的特殊变量引用(跟路径无关)</li>
<li>除此以外，$0会被设置成调用bash的那个文件的名字(不能确定是绝对路径)</li>
</ul>
<p>正确的姿势：</p>
<p>basepath=$(cd <code>dirname $0</code>; pwd)</p>
<ul>
<li>dirname $0，取得当前执行的脚本文件的父目录</li>
<li>cd <code>dirname $0</code>，进入这个目录(切换当前工作目录)</li>
<li>pwd，显示当前工作目录(cd执行后的)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      shell 获取正在执行脚本的绝对路径
    
    </summary>
    
      <category term="Linux" scheme="https://roc-wong.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://roc-wong.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://roc-wong.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>svn status</title>
    <link href="https://roc-wong.github.io/blog/2017/03/svn-status.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/svn-status.html</id>
    <published>2017-03-26T13:07:54.000Z</published>
    <updated>2017-03-26T13:39:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h2><p>svn status (stat, st) — 打印工作副本文件和目录的状态。</p>
<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>svn status [PATH…]</p>
<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Print the status of working copy files and directories. With no arguments, it prints only locally modified items (no repository access). With –show-updates (-u), it adds working revision and server out-of-date information. With –verbose (-v), it prints full revision information on every item. With –quiet (-q), it prints only summary information about locally modified items.</p>
<a id="more"></a>
<p>The first seven columns in the output are each one character wide, and each column gives you information about a different aspect of each working copy item.</p>
<p>第一列指出一个项目的是添加, 删除还是其它的修改：</p>
<p>‘ ‘<br>没有修改。</p>
<p>‘A’<br>预定要添加的项目。</p>
<p>‘D’<br>预定要删除的项目。</p>
<p>‘M’<br>项目已经修改了。</p>
<p>‘R’<br>Item has been replaced in your working copy. This means the file was scheduled for deletion, and then a new file with the same name was scheduled for addition in its place.</p>
<p>‘C’<br>项目的内容(相对于属性)与更新得到的数据冲突了。</p>
<p>‘X’<br>项目与外部定义相关。</p>
<p>‘I’<br>项目被忽略(例如使用svn:ignore属性)。</p>
<p>‘?’<br>项目不在版本控制之下。</p>
<p>‘!’<br>Item is missing (e.g., you moved or deleted it without using svn). This also indicates that a directory is incomplete (a checkout or update was interrupted).</p>
<p>‘~’<br>Item is versioned as one kind of object (file, directory, link), but has been replaced by a different kind of object.</p>
<p>The second column tells the status of a file’s or directory’s properties:</p>
<p>‘ ‘<br>没有修改。</p>
<p>‘M’<br>这个项目的属性已经修改。</p>
<p>‘C’<br>这个项目的属性与从版本库得到的更新有冲突。</p>
<p>The third column is populated only if the working copy directory is locked (see 第 6 节 “有时你只需要清理”):</p>
<p>‘ ‘<br>项目没有锁定。</p>
<p>‘L’<br>项目已经锁定。</p>
<p>The fourth column is populated only if the item is scheduled for addition-with-history:</p>
<p>‘ ‘<br>没有历史预定要提交。</p>
<p>‘+’<br>历史预定要伴随提交。</p>
<p>The fifth column is populated only if the item is switched relative to its parent (see 第 5 节 “使用分支”):</p>
<p>‘ ‘<br>项目是它的父目录的孩子。</p>
<p>‘S’<br>项目已经转换。</p>
<p>The sixth column is populated with lock information:</p>
<p>‘ ‘<br>When –show-updates (-u) is used, the file is not locked. If –show-updates (-u) is not used, this merely means that the file is not locked in this working copy.</p>
<p>K<br>文件锁定在工作副本。</p>
<p>O<br>File is locked either by another user or in another working copy. This appears only when –show-updates (-u) is used.</p>
<p>T<br>File was locked in this working copy, but the lock has been “stolen” and is invalid. The file is currently locked in the repository. This appears only when –show-updates (-u) is used.</p>
<p>B<br>File was locked in this working copy, but the lock has been “broken” and is invalid. The file is no longer locked. This appears only when –show-updates (-u) is used.</p>
<p>The seventh column is populated only if the item is the victim of a tree conflict:</p>
<p>‘ ‘<br>项目不是树冲突的受害者。</p>
<p>‘C’<br>项目是树冲突的受害者</p>
<p>第八列始终为空。</p>
<p>The out-of-date information appears in the ninth column (only if you pass the –show-updates (-u) option):</p>
<p>‘ ‘<br>这个项目在工作副本是最新的。</p>
<p>‘*‘<br>在服务器这个项目有了新的修订版本。</p>
<p>The remaining fields are variable width and delimited by spaces. The working revision is the next field if the –show-updates (-u) or –verbose (-v) option is passed.</p>
<p>If the –verbose (-v) option is passed, the last committed revision and last committed author are displayed next.</p>
<p>工作副本路径永远是最后一个字段，所以它可以包括空格。</p>
<p>选项</p>
<p>–changelist ARG<br>–depth ARG<br>–ignore-externals<br>–incremental<br>–no-ignore<br>–quiet (-q)<br>–show-updates (-u)<br>–verbose (-v)<br>–xml<br>例子</p>
<p>这是查看你在工作副本所做的修改的最简单的方法。</p>
<p>$ svn status wc<br> M      wc/bar.c<br>A  +    wc/qax.c<br>If you want to find out what files in your working copy are out of date, pass the –show-updates (-u) option (this will not make any changes to your working copy). Here you can see that wc/foo.c has changed in the repository since we last updated our working copy:</p>
<p>$ svn status -u wc<br> M            965    wc/bar.c</p>
<pre><code>*     965    wc/foo.c
</code></pre><p>A  +          965    wc/qax.c<br>Status against revision:    981<br>[注意]    注意<br>–show-updates (-u) only places an asterisk next to items that are out of date (i.e., items that will be updated from the repository if you later use svn update). –show-updates (-u) does not cause the status listing to reflect the repository’s version of the item (although you can see the revision number in the repository by passing the –verbose (-v) option).</p>
<p>The most information you can get out of the status subcommand is as follows:</p>
<p>$ svn status -u -v wc<br> M            965       938 sally        wc/bar.c</p>
<pre><code>*     965       922 harry        wc/foo.c
</code></pre><p>A  +          965       687 harry        wc/qax.c<br>              965       687 harry        wc/zig.c<br>Status against revision:   981<br>Lastly, you can get svn status output in XML format with the –xml option:</p>
<p>$ svn status –xml wc<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">status</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">target</span></span></div><div class="line">   <span class="attr">path</span>=<span class="string">"wc"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">entry</span></span></div><div class="line">   <span class="attr">path</span>=<span class="string">"qax.c"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">wc-status</span></span></div><div class="line">   <span class="attr">props</span>=<span class="string">"none"</span></div><div class="line">   <span class="attr">item</span>=<span class="string">"added"</span></div><div class="line">   <span class="attr">revision</span>=<span class="string">"0"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">wc-status</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">entry</span></span></div><div class="line">   <span class="attr">path</span>=<span class="string">"bar.c"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">wc-status</span></span></div><div class="line">   <span class="attr">props</span>=<span class="string">"normal"</span></div><div class="line">   <span class="attr">item</span>=<span class="string">"modified"</span></div><div class="line">   <span class="attr">revision</span>=<span class="string">"965"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">commit</span></span></div><div class="line">   <span class="attr">revision</span>=<span class="string">"965"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">author</span>&gt;</span>sally<span class="tag">&lt;/<span class="name">author</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">date</span>&gt;</span>2008-05-28T06:35:53.048870Z<span class="tag">&lt;/<span class="name">date</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">commit</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">wc-status</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">status</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      svn status 详解
    
    </summary>
    
      <category term="SVN" scheme="https://roc-wong.github.io/categories/SVN/"/>
    
    
      <category term="SVN" scheme="https://roc-wong.github.io/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>股票估值</title>
    <link href="https://roc-wong.github.io/blog/2017/03/%E8%82%A1%E7%A5%A8%E4%BC%B0%E5%80%BC.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/股票估值.html</id>
    <published>2017-03-15T15:13:19.000Z</published>
    <updated>2017-03-15T15:20:40.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>格雷厄姆认为：“稳健投资者的基本原理是不会随着年代的更替而改变的，但是这些原理的应用，则必须随着金融机制和金融环境所发生的重大变化而作出相应的调整。”</p>
<p>实际上巴菲特的“以合理的价格买优秀的公司”也正是格老与时俱进思想的体现。</p>
</blockquote>
<p>股票估值是一个相对复杂的过程，影响的因素很多，没有全球统一的标准。影响股票估值的主要因素依次是每股收益、行业市盈率、流通股本、每股净资产、每股净资产增长率等指标。</p>
<p>股票估值分为绝对估值、相对估值和联合估值。</p>
<a id="more"></a>
<h2 id="绝对估值"><a href="#绝对估值" class="headerlink" title="绝对估值"></a>绝对估值</h2><p>绝对估值(absolute valuation)是通过对上市公司历史及当前的基本面的分析和对未来反映公司经营状况的财务数据的预测获得上市公司股票的内在价值。</p>
<h3 id="绝对估值的方法"><a href="#绝对估值的方法" class="headerlink" title="绝对估值的方法"></a>绝对估值的方法</h3><p>一是现金流贴现定价模型，二是B-S期权定价模型(主要应用于期权定价、权证定价等)。现金流贴现定价模型目前使用最多的是DDM和DCF，而DCF估值模型中，最广泛应用的就是FCFE股权自由现金流模型。</p>
<h3 id="绝对估值的作用"><a href="#绝对估值的作用" class="headerlink" title="绝对估值的作用"></a>绝对估值的作用</h3><p>股票的价格总是围绕着股票的内在价值上下波动，发现价格被低估的股票，在股票的价格远远低于内在价值的时候买入股票，而在股票的价格回归到内在价值甚至高于内在价值的时候卖出以获利。<br>对上市公司进行研究，经常听到估值这个词，说的其实是如何来判断一家公司的价值同时与它的当前股价进行对比，得出股价是否偏离价值的判断，进而指导投资。</p>
<p>DCF是一套很严谨的估值方法，是一种绝对定价方法，想得出准确的DCF值，需要对公司未来发展情况有清晰的了解。得出DCF 值的过程就是判断公司未来发展的过程。所以DCF 估值的过程也很重要。就准确判断企业的未来发展来说，判断成熟稳定的公司相对容易一些，处于扩张期的企业未来发展的不确定性较大，准确判断较为困难。再加上DCF 值本身对参数的变动很敏感，使DCF 值的可变性很大。但在得出DCF 值的过程中，会反映研究员对企业未来发展的判断，并在此基础上假设。有了DCF 的估值过程和结果，以后如果假设有变动，即可通过修改参数得到新的估值。</p>
<h2 id="相对估值"><a href="#相对估值" class="headerlink" title="相对估值"></a>相对估值</h2><p>相对估值是使用市盈率、市净率、市售率、市现率等价格指标与其它多只股票（对比系）进行对比，如果低于对比系的相应的指标值的平均值，股票价格被低估，股价将很有希望上涨，使得指标回归对比系的平均值。<br>相对估值包括PE、PB、PEG、EV/EBITDA等估值法。通常的做法是对比，一个是和该公司历史数据进行对比，二是和国内同行业企业的数据进行对比，确定它的位置，三是和国际上的(特别是香港和美国)同行业重点企业数据进行对比。<br><strong>市盈率PE（股价/每股收益）</strong>：</p>
<p>PE是简洁有效的估值方法，其核心在于e 的确定。PE=p/e，即价格与每股收益的比值。从直观上看，如果公司未来若干年每股收益为恒定值，那么PE 值代表了公司保持恒定盈利水平的存在年限。这有点像实业投资中回收期的概念，只是忽略了资金的时间价值。而实际上保持恒定的e 几乎是不可能的，e 的变动往往取决于宏观经济和企业的生存周期所决定的波动周期。所以在运用PE 值的时候，e 的确定显得尤为重要，由此也衍生出具有不同含义的PE 值。E 有两个方面，一个是历史的e，另一个是预测的e。对于历史的e 来说，可以用不同e 的时点值，可以用移动平均值，也可以用动态年度值，这取决于想要表达的内容。对于预测的e 来说，预测的准确性尤为重要，在实际市场中，e 的变动趋势对股票投资往往具有决定性的影响。<br>市净率PB（股价/每股净资）和净资产收益率ROE,PB &amp;ROE适合于周期的极值判断。对于股票投资来说，准确预测e 是非常重要的，e 的变动趋势往往决定了股价是上行还是下行。但股价上升或下降到多少是合理的呢？ PB&amp;ROE 可以给出一个判断极值的方法。比如，对于一个有良好历史ROE 的公司，在业务前景尚可的情况下，PB 值低于1就有可能是被低估的。如果公司的盈利前景较稳定，没有表现出明显的增长性特征，公司的PB 值显著高于行业（公司历史）的最高PB 值，股价触顶的可能性就比较大。这里提到的周期有三个概念：市场的波动周期、股价的变动周期和周期性行业的变动周期。</p>
<h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="PE"><a href="#PE" class="headerlink" title="PE"></a>PE</h3><p>PE是指市盈率，也称为“利润收益率”，是某种股票普通股每股市价与每股盈利的比率，即：PE(市盈率)=每股市价/每股收益。市盈率把股价和利润联系起来，反映了企业的近期表现。如果股价上升，利润没有变化，甚至下降，则市盈率将会上升。</p>
<h2 id="PB"><a href="#PB" class="headerlink" title="PB"></a>PB</h2><p>平均市净率=股价/账面价值。其中，账面价值=总资产-无形资产-负债-优先股权益。可以看出，所谓账面价值是公司解散清算的价值。如果公司要清算，那么先要还债，无形资产则将不复存在，而优先股的优先权之一就是清算的时候先分钱，但是本股市没有优先股。这样，用每股净资产来代替账面价值，则PB就是大家理解的市净率，即：PB(市净率)=股价/每股净资产。</p>
<h2 id="ROE"><a href="#ROE" class="headerlink" title="ROE"></a>ROE</h2><p>ROE即净资产收益率，又称股东权益报酬率。作为判断上市公司盈利能力的一项重要指标，一直受到证券市场参与各方的极大关注。分析师将ROE解释为将公司盈余再投资以产生更多收益的能力。它也是衡量公司内部财务、行销及经营绩效的指标。ROE的计算方法是：净资产收益率＝报告期净利润／报告期末净资产。</p>
<h2 id="DCF"><a href="#DCF" class="headerlink" title="DCF"></a>DCF</h2><p>绝对估值法DCF：DCF是一套很严谨的估值方法，是一种绝对定价方法，想得出准确的DCF值，需要对公司未来发展情况有清晰的了解。得出DCF值的过程就是判断公司未来发展的过程，所以DCF估值的过程也很重要。就准确判断企业的未来发展来说，判断成熟稳定的公司相对容易一些，处于扩张期的企业未来发展的不确定性较大，准确判断较为困难。再加上DCF值本身对参数的变动很敏感，使DCF值的可变性很大。但在得出DCF值的过程中，会反映研究员对企业未来发展的判断，并在此基础上假设。有了DCF的估值过程和结果，以后如果假设有变动，即可通过修改参数得到新的估值。</p>
]]></content>
    
    <summary type="html">
    
      股票估值分为绝对估值、相对估值和联合估值。影响股票估值的主要因素依次是每股收益、行业市盈率、流通股本、每股净资产、每股净资产增长率等指标。
    
    </summary>
    
      <category term="证券" scheme="https://roc-wong.github.io/categories/%E8%AF%81%E5%88%B8/"/>
    
    
      <category term="证券" scheme="https://roc-wong.github.io/tags/%E8%AF%81%E5%88%B8/"/>
    
  </entry>
  
  <entry>
    <title>人生最浪费生命的事情</title>
    <link href="https://roc-wong.github.io/blog/2017/03/%E4%BA%BA%E7%94%9F%E6%9C%80%E6%B5%AA%E8%B4%B9%E7%94%9F%E5%91%BD%E7%9A%84%E4%BA%8B%E6%83%85.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/人生最浪费生命的事情.html</id>
    <published>2017-03-14T16:03:51.000Z</published>
    <updated>2017-03-14T16:14:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>人这一生，浪费了太多的时间在毫无意义的事情上，担忧、抱怨、埋怨、比较……</p>
<a id="more"></a>
<h2 id="担忧"><a href="#担忧" class="headerlink" title="担忧"></a>担忧</h2><p>庸人自扰是为难自己，让自己每天神经紧绷、忧心忡忡，只会使自己身心俱疲。生活里总会有变数，总会有风雨，任谁都无法提前预知一切。所以，让自己焦虑烦扰，不如让自己释怀轻松地过每一天，顺其自然、淡定坦然地面对一切，不要让担忧禁锢你的身体、束缚你的内心。</p>
<h2 id="抱怨"><a href="#抱怨" class="headerlink" title="抱怨"></a>抱怨</h2><p>充满抱怨的人生会与快乐渐行渐远。对环境不满、对别人不满、对命运不满、对现实不满，最后对自己的选择和决定不满……抱怨会削弱你奋斗的力量，会阻碍你前行的脚步，会让你陷入负面情绪无法自拔。试着让自己勇敢坦然地面对一切风雨，接受自己做出的每一个决定，即使这个过程充满艰辛，也不要轻言放弃，更不要裹足不前、自怨自艾。</p>
<h2 id="埋怨"><a href="#埋怨" class="headerlink" title="埋怨"></a>埋怨</h2><p>遇事，先责备别人；不顺，先埋怨条件，这是一种消极被动的人生态度，是一种缺乏担当的表现。埋怨根本于事无补，只会让你看不清自己的问题、意识不到自己的错误。聪明的人会懂得先反省自己，从自己的身上找答案。只有用这种积极的态度去面对生活中遇到的问题，才能够让你汲取教训、增长经验，让你在今后的生活中越走越顺利。</p>
<h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><p>　　生活中，自己觉得快乐不快乐、满足不满足、幸福不幸福，才是正理。不要陷入跟别人不断的比较之中，不要因为别人扰乱了自己的步伐。每个人都有自己的机遇和福分，也会遭遇自己的坎坷和波折，不要拿别人的成就荣耀与自己比，不要盲目追随、模仿别人的生活方式而忘记了自己的初衷和追求。多倾听自己的内心，多思考自己的需要，走自己的路，过自己的人生。</p>
<h2 id="这是你吗？"><a href="#这是你吗？" class="headerlink" title="这是你吗？"></a>这是你吗？</h2><h3 id="花费了太多的时间在你不该做的事情上。"><a href="#花费了太多的时间在你不该做的事情上。" class="headerlink" title="花费了太多的时间在你不该做的事情上。"></a>花费了太多的时间在你不该做的事情上。</h3><h3 id="总是在抱怨。"><a href="#总是在抱怨。" class="headerlink" title="总是在抱怨。"></a>总是在抱怨。</h3><h3 id="没有充实你的思想。"><a href="#没有充实你的思想。" class="headerlink" title="没有充实你的思想。"></a>没有充实你的思想。</h3><h3 id="满脑子都是消极想法。"><a href="#满脑子都是消极想法。" class="headerlink" title="满脑子都是消极想法。"></a>满脑子都是消极想法。</h3><h3 id="觉得没有激情。"><a href="#觉得没有激情。" class="headerlink" title="觉得没有激情。"></a>觉得没有激情。</h3><h3 id="对未来没有计划。"><a href="#对未来没有计划。" class="headerlink" title="对未来没有计划。"></a>对未来没有计划。</h3><h3 id="花了太多时间和对你成长没有任何贡献的人在一起。"><a href="#花了太多时间和对你成长没有任何贡献的人在一起。" class="headerlink" title="花了太多时间和对你成长没有任何贡献的人在一起。"></a>花了太多时间和对你成长没有任何贡献的人在一起。</h3><h3 id="沉迷于手机。"><a href="#沉迷于手机。" class="headerlink" title="沉迷于手机。"></a>沉迷于手机。</h3><h3 id="把钱花在了毫无意义的事上。"><a href="#把钱花在了毫无意义的事上。" class="headerlink" title="把钱花在了毫无意义的事上。"></a>把钱花在了毫无意义的事上。</h3><h3 id="睡眠不足。"><a href="#睡眠不足。" class="headerlink" title="睡眠不足。"></a>睡眠不足。</h3><h3 id="没有照顾好自己的身体。"><a href="#没有照顾好自己的身体。" class="headerlink" title="没有照顾好自己的身体。"></a>没有照顾好自己的身体。</h3><h3 id="不愿意离开舒适区。"><a href="#不愿意离开舒适区。" class="headerlink" title="不愿意离开舒适区。"></a>不愿意离开舒适区。</h3><blockquote>
<p>把时间和感受留给自己、留给内心。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人这一生，浪费了太多的时间在毫无意义的事情上，担忧、抱怨、埋怨、比较……&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://roc-wong.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="人生感悟" scheme="https://roc-wong.github.io/tags/%E4%BA%BA%E7%94%9F%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>国债逆回购</title>
    <link href="https://roc-wong.github.io/blog/2017/03/%E5%9B%BD%E5%80%BA%E9%80%86%E5%9B%9E%E8%B4%AD.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/国债逆回购.html</id>
    <published>2017-03-14T15:41:13.000Z</published>
    <updated>2017-03-14T15:53:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Thinking will not overcome fear but action will.<br>空想终日惶恐，行动方可无惧。</p>
</blockquote>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>国债逆回购，就是将资金通过国债回购市场拆出，其实就是一种短期贷款，即你把钱借给别人，获得固定利息;而别人用国债作抵押，到期还本付息。<br>国债逆回购业务是能为投资者提高闲置资金增值能力的金融品种，它具有安全性高、流通性强、收益理想等特点，等同于国债。</p>
<a id="more"></a>
<h2 id="债券回购交易的实质是？"><a href="#债券回购交易的实质是？" class="headerlink" title="债券回购交易的实质是？"></a>债券回购交易的实质是？</h2><p>逆回购就是客户放弃一定时间内的资金使用权，在约定时间内按成交时确定的利率获取利息收入的一种投资品种。</p>
<hr>
<p>债券回购是指交易双方进行的以债券为权利质押的一种短期资金融通业务。资金融入方（正回购方）在将债券质押给资金融出方（逆回购方）以融入资金的同时，双方约定在将来某一日期由正回购方按约定回购利率计算的金额向逆回购方买回相等数量的同品种债券的交易行为。债券回购的最长期限为1年，利率由双方协商确定。</p>
<hr>
<p>这当中卖方的目的在于获得高于银行存款利息收入，而买方的目的在于获得资金的使用权。一笔回购交易涉及二次交易契约行为，即开始时的初始交易及回购期满时的回购交易。买卖双方的具体操作程序如下：债券回购交易申报中，融资方（债券持有者）按“买入”予以申报，融券方（资金持有者）按“卖出”予以申报。到期反向成交时，无须再行申报，由交易所电脑系统自动产生一条反向成交记录，登记结算机构据此进行资金和债券的清算与交割。</p>
<hr>
<p>国债逆回购本质上就是一个机构借钱给另一个机构（银行，保险等）。原本国家规定是机构间的拆借，不允许个人参与，不知道什么时候开始个人也可以参加了。什么时候机构需要临时借钱？目前来看一般是每季度末1－2天，银行需要借钱美化信贷指标；大蓝筹发行前一日。</p>
<h2 id="是否有风险？"><a href="#是否有风险？" class="headerlink" title="是否有风险？"></a>是否有风险？</h2><p>与股票交易不同，债券回购在成交之后不再承担价格波动的风险，收益率的高低在成交时确定。因此基本无价格波动风险。</p>
<h2 id="适合哪些人买？"><a href="#适合哪些人买？" class="headerlink" title="适合哪些人买？"></a>适合哪些人买？</h2><ol>
<li>有理财需求的人</li>
<li>钱放银行拿死利息的人</li>
<li>炒股的人</li>
<li>做生意的流动资金</li>
<li>家中的闲置资金</li>
</ol>
<h2 id="申报规则"><a href="#申报规则" class="headerlink" title="申报规则"></a>申报规则</h2><p>上海回购交易的申报数量必须为100手（10万资金）的整数倍，单笔数量不超过1万手（1000万资金）；回购价格为每百元资金到期的年收益率，最小变动单位为0.005元。</p>
<p>深圳回购交易的申报数量必须为1手的整数倍（1000元），回购价格为每百元资金到期的年收益率，最小变动单位为0.001元。</p>
<h2 id="回购买入的最佳时间是？"><a href="#回购买入的最佳时间是？" class="headerlink" title="回购买入的最佳时间是？"></a>回购买入的最佳时间是？</h2><ol>
<li>一般2点半之后临近收盘下单量往往会大增，从而导致价格走低。</li>
<li>一般星期四、月末、季度末、年末，市场资金面紧张价格通常很高。</li>
<li>重要节假日前两天，1日回购品种价格通常较高。</li>
<li>周五3日品种一般比1日品种总收益高。</li>
<li>如果其间有节假日，长期品种一般比短期品种总收益高。</li>
<li>单日内一般9：30-10：00、14：00-14：30收益率最高。</li>
</ol>
<blockquote>
<p>从以往的规律和盘面表现看，每日下午2时30分之前利率较高; 每周四相比平日利率要高;节假日前利率尤其高。</p>
</blockquote>
<h2 id="投资品种"><a href="#投资品种" class="headerlink" title="投资品种"></a>投资品种</h2><p>投资者要进行回购只能做沪市2040**、深1318***的新国债回购，共18个品种。</p>
<blockquote>
<p>上交所回购品种</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">品种</th>
<th style="text-align:right">代码</th>
<th style="text-align:center">简称</th>
<th style="text-align:center">到账时间</th>
<th style="text-align:center">可用时间</th>
<th style="text-align:center">手续费比例</th>
<th style="text-align:center">每10万元交易手续费(元)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1天国债回购</td>
<td style="text-align:right">204001</td>
<td style="text-align:center">GC001</td>
<td style="text-align:center">T + 1</td>
<td style="text-align:center">T + 2</td>
<td style="text-align:center">成交金额的0.001%</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">2天国债回购</td>
<td style="text-align:right">204002</td>
<td style="text-align:center">GC002</td>
<td style="text-align:center">T + 2</td>
<td style="text-align:center">T + 3</td>
<td style="text-align:center">成交金额的0.002%</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">3天国债回购</td>
<td style="text-align:right">204003</td>
<td style="text-align:center">GC003</td>
<td style="text-align:center">T + 3</td>
<td style="text-align:center">T + 4</td>
<td style="text-align:center">成交金额的0.003%</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">4天国债回购</td>
<td style="text-align:right">204004</td>
<td style="text-align:center">GC004</td>
<td style="text-align:center">T + 4</td>
<td style="text-align:center">T + 5</td>
<td style="text-align:center">成交金额的0.004%</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">7天国债回购</td>
<td style="text-align:right">204007</td>
<td style="text-align:center">GC007</td>
<td style="text-align:center">T + 7</td>
<td style="text-align:center">T + 8</td>
<td style="text-align:center">成交金额的0.005%</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">14天国债回购</td>
<td style="text-align:right">204014</td>
<td style="text-align:center">GC014</td>
<td style="text-align:center">T + 14</td>
<td style="text-align:center">T + 15</td>
<td style="text-align:center">成交金额的0.010%</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">28天国债回购</td>
<td style="text-align:right">204028</td>
<td style="text-align:center">GC028</td>
<td style="text-align:center">T + 28</td>
<td style="text-align:center">T + 29</td>
<td style="text-align:center">成交金额的0.020%</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">91天国债回购</td>
<td style="text-align:right">204091</td>
<td style="text-align:center">GC091</td>
<td style="text-align:center">T + 91</td>
<td style="text-align:center">T + 92</td>
<td style="text-align:center">成交金额的0.030%</td>
<td style="text-align:center">30</td>
</tr>
<tr>
<td style="text-align:center">182天国债回购</td>
<td style="text-align:right">204182</td>
<td style="text-align:center">GC182</td>
<td style="text-align:center">T + 182</td>
<td style="text-align:center">T + 183</td>
<td style="text-align:center">成交金额的0.030%</td>
<td style="text-align:center">30</td>
</tr>
</tbody>
</table>
<blockquote>
<p>深交所回购品种</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">品种</th>
<th style="text-align:right">代码</th>
<th style="text-align:center">简称</th>
<th style="text-align:center">到账时间</th>
<th style="text-align:center">可用时间</th>
<th style="text-align:center">手续费比例</th>
<th style="text-align:center">每10万元交易手续费(元)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1天国债回购</td>
<td style="text-align:right">131810</td>
<td style="text-align:center">R-00l</td>
<td style="text-align:center">T + 1</td>
<td style="text-align:center">T + 2</td>
<td style="text-align:center">成交金额的0.001%</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">2天国债回购</td>
<td style="text-align:right">1318ll</td>
<td style="text-align:center">R-002</td>
<td style="text-align:center">T + 2</td>
<td style="text-align:center">T + 3</td>
<td style="text-align:center">成交金额的0.002%</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">3天国债回购</td>
<td style="text-align:right">131800</td>
<td style="text-align:center">R-003</td>
<td style="text-align:center">T + 3</td>
<td style="text-align:center">T + 4</td>
<td style="text-align:center">成交金额的0.003%</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">4天国债回购</td>
<td style="text-align:right">131809</td>
<td style="text-align:center">R-004</td>
<td style="text-align:center">T + 4</td>
<td style="text-align:center">T + 5</td>
<td style="text-align:center">成交金额的0.004%</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">7天国债回购</td>
<td style="text-align:right">131801</td>
<td style="text-align:center">R-007</td>
<td style="text-align:center">T + 7</td>
<td style="text-align:center">T + 8</td>
<td style="text-align:center">成交金额的0.005%</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">14天国债回购</td>
<td style="text-align:right">131802</td>
<td style="text-align:center">R-014</td>
<td style="text-align:center">T + 14</td>
<td style="text-align:center">T + 15</td>
<td style="text-align:center">成交金额的0.010%</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">28天国债回购</td>
<td style="text-align:right">131803</td>
<td style="text-align:center">R-028</td>
<td style="text-align:center">T + 28</td>
<td style="text-align:center">T + 29</td>
<td style="text-align:center">成交金额的0.020%</td>
<td style="text-align:center">20</td>
</tr>
<tr>
<td style="text-align:center">91天国债回购</td>
<td style="text-align:right">131805</td>
<td style="text-align:center">R-091</td>
<td style="text-align:center">T + 91</td>
<td style="text-align:center">T + 92</td>
<td style="text-align:center">成交金额的0.030%</td>
<td style="text-align:center">30</td>
</tr>
<tr>
<td style="text-align:center">182天国债回购</td>
<td style="text-align:right">131806</td>
<td style="text-align:center">R-182</td>
<td style="text-align:center">T + 182</td>
<td style="text-align:center">T + 183</td>
<td style="text-align:center">成交金额的0.030%</td>
<td style="text-align:center">30</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      国债逆回购，就是将资金通过国债回购市场拆出，其实就是一种短期贷款，即你把钱借给别人，获得固定利息;而别人用国债作抵押，到期还本付息。
    
    </summary>
    
      <category term="证券" scheme="https://roc-wong.github.io/categories/%E8%AF%81%E5%88%B8/"/>
    
    
      <category term="证券" scheme="https://roc-wong.github.io/tags/%E8%AF%81%E5%88%B8/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 插件推荐</title>
    <link href="https://roc-wong.github.io/blog/2017/03/IntelliJ-IDEA-plugins.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/IntelliJ-IDEA-plugins.html</id>
    <published>2017-03-10T15:01:54.000Z</published>
    <updated>2017-03-13T14:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>人不要等明天，因为没有人知道自己有没有明天。</p>
</blockquote>
<h1 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h1><p>本篇博客整理自IntelliJ IDEA 简体中文专题教程和日常开发归档：</p>
<blockquote>
<ul>
<li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial/blob/newMaster/plugins-settings.md" target="_blank" rel="external">IntelliJ IDEA 简体中文专题教程</a></li>
</ul>
</blockquote>
<a id="more"></a>
<table>
<thead>
<tr>
<th style="text-align:left">插件名称</th>
<th style="text-align:left">插件介绍</th>
<th style="text-align:left">官网地址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">IDE Features Trainer</td>
<td style="text-align:left">IntelliJ IDEA 官方出的学习辅助插件</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/8554?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/8554?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">Key promoter</td>
<td style="text-align:left">快捷键提示</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/4455?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/4455?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">Grep Console</td>
<td style="text-align:left">自定义设置控制台输出颜色</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/idea/plugin/7125-grep-console" target="_blank" rel="external">https://plugins.jetbrains.com/idea/plugin/7125-grep-console</a></td>
</tr>
<tr>
<td style="text-align:left">String Manipulation</td>
<td style="text-align:left">驼峰式命名和下划线命名交替变化</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/2162?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/2162?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">CheckStyle-IDEA</td>
<td style="text-align:left">代码规范检查</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/1065?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/1065?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">FindBugs-IDEA</td>
<td style="text-align:left">潜在 Bug 检查</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/3847?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/3847?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">MetricsReloaded</td>
<td style="text-align:left">代码复杂度检查</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/93?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/93?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">Statistic</td>
<td style="text-align:left">代码统计</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/4509?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/4509?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">JRebel Plugin</td>
<td style="text-align:left">热部署</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/?id=4441" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/?id=4441</a></td>
</tr>
<tr>
<td style="text-align:left">CodeGlance</td>
<td style="text-align:left">在编辑代码最右侧，显示一块代码小地图</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7275?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7275?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">GsonFormat</td>
<td style="text-align:left">把 JSON 字符串直接实例化成类</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7654?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7654?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">MultiMarkdown</td>
<td style="text-align:left">书写 Markdown 文章</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7896?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7896?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">Eclipse Code Formatter</td>
<td style="text-align:left">使用 Eclipse 的代码格式化风格，在一个团队中如果公司有规定格式化风格，这个可以使用。</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/6546?pr=idea" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/6546?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">Jindent-Source Code Formatter</td>
<td style="text-align:left">自定义类、方法、doc、变量注释模板</td>
<td style="text-align:left"><a href="http://plugins.jetbrains.com/plugin/2170?pr=idea" target="_blank" rel="external">http://plugins.jetbrains.com/plugin/2170?pr=idea</a></td>
</tr>
<tr>
<td style="text-align:left">ECTranslation</td>
<td style="text-align:left">翻译插件</td>
<td style="text-align:left"><a href="https://github.com/Skykai521/ECTranslation/releases" target="_blank" rel="external">https://github.com/Skykai521/ECTranslation/releases</a></td>
</tr>
<tr>
<td style="text-align:left">UpperLowerCapitalize</td>
<td style="text-align:left">大小写插件</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/183-upperlowercapitalize" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/183-upperlowercapitalize</a></td>
</tr>
<tr>
<td style="text-align:left">Maven Helper</td>
<td style="text-align:left">A must have plugin for working with Maven.</td>
<td style="text-align:left"><a href="https://plugins.jetbrains.com/plugin/7179-maven-helper" target="_blank" rel="external">https://plugins.jetbrains.com/plugin/7179-maven-helper</a></td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      IntelliJ IDEA 插件
    
    </summary>
    
      <category term="IDE" scheme="https://roc-wong.github.io/categories/IDE/"/>
    
    
      <category term="IDE" scheme="https://roc-wong.github.io/tags/IDE/"/>
    
      <category term="IntelliJ IDEA" scheme="https://roc-wong.github.io/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA For Mac 快捷键</title>
    <link href="https://roc-wong.github.io/blog/2017/03/IntelliJ-IDEA-key-map-for-Mac-OS.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/IntelliJ-IDEA-key-map-for-Mac-OS.html</id>
    <published>2017-03-10T14:58:22.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>刘心武说：与其讨好别人，不如武装自己；与其逃避现实，不如笑对人生；与其听风听雨，不如昂首出击！</p>
</blockquote>
<p><strong>建议将 Mac 系统中与 IntelliJ IDEA 冲突的快捷键取消或更改，不建议改 IntelliJ IDEA 的默认快捷键。</strong></p>
<p>本篇博客整理自IntelliJ IDEA 简体中文专题教程和日常开发归档：</p>
<blockquote>
<ul>
<li><p><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="external">IntelliJ IDEA 简体中文专题教程</a></p>
</li>
<li><p>Windows / Linux：<a href="https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf" target="_blank" rel="external">https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf</a></p>
</li>
<li><p>Mac OS X：<a href="https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard_Mac.pdf" target="_blank" rel="external">https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard_Mac.pdf</a></p>
</li>
</ul>
</blockquote>
<a id="more"></a>
<p> 在 IntelliJ IDEA 中有两个 Mac 版本的快捷键，一个叫做：Mac OS X，一个叫做：Mac OS X 10.5+<br>。目前都是用：Mac OS X 10.5+ 有两套的原因：<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/206159109-Updated-Mac-OS-X-keymap-Feedback-needed" target="_blank" rel="external">https://intellij-support.jetbrains.com/hc/en-us/community/posts/206159109-Updated-Mac-OS-X-keymap-Feedback-needed</a></p>
<h4 id="Mac键盘符号和修饰键说明"><a href="#Mac键盘符号和修饰键说明" class="headerlink" title="Mac键盘符号和修饰键说明"></a>Mac键盘符号和修饰键说明</h4><ul>
<li><code>⌘</code> Command</li>
<li><code>⇧</code> Shift</li>
<li><code>⌥</code> Option</li>
<li><code>⌃</code> Control</li>
<li><code>↩︎</code> Return/Enter</li>
<li><code>⌫</code> Delete</li>
<li><code>⌦</code> 向前删除键（Fn+Delete）</li>
<li><code>↑</code> 上箭头</li>
<li><code>↓</code> 下箭头</li>
<li><code>←</code> 左箭头</li>
<li><code>→</code> 右箭头</li>
<li><code>⇞</code> Page Up（Fn+↑）</li>
<li><code>⇟</code> Page Down（Fn+↓）</li>
<li><code>Home</code> Fn + ←</li>
<li><code>End</code> Fn + →</li>
<li><code>⇥</code> 右制表符（Tab键）</li>
<li><code>⇤</code> 左制表符（Shift+Tab）</li>
<li><code>⎋</code> Escape (Esc)</li>
</ul>
<h4 id="一、Editing（编辑）"><a href="#一、Editing（编辑）" class="headerlink" title="一、Editing（编辑）"></a>一、Editing（编辑）</h4><ul>
<li><code>Control + Space</code> 基本的代码补全（补全任何类、方法、变量）</li>
<li><code>Control + Shift + Space</code> 智能代码补全（过滤器方法列表和变量的预期类型）</li>
<li><code>Command + Shift + Enter</code> 自动结束代码，行末自动添加分号</li>
<li><code>Command + P</code> 显示方法的参数信息</li>
<li><code>Control + J</code> 快速查看文档</li>
<li><code>Shift + F1</code> 查看外部文档（在某些代码上会触发打开浏览器显示相关文档）</li>
<li><code>Command + 鼠标放在代码上</code> 显示代码简要信息</li>
<li><code>Command + F1</code> 在错误或警告处显示具体描述信息</li>
<li><code>Command + N, Control + Enter, Control + N</code> 生成代码（getter、setter、构造函数、hashCode/equals,toString）</li>
<li><code>Control + O</code> 覆盖方法（重写父类方法）</li>
<li><code>Control + I</code> 实现方法（实现接口中的方法）</li>
<li><code>Command + Option + T</code> 包围代码（使用if..else, try..catch, for, synchronized等包围选中的代码）</li>
<li><code>Command + /</code> 注释/取消注释与行注释</li>
<li><code>Command + Option + /</code> 注释/取消注释与块注释</li>
<li><code>Option + 方向键上</code> 连续选中代码块</li>
<li><code>Option + 方向键下</code> 减少当前选中的代码块</li>
<li><code>Control + Shift + Q</code> 显示上下文信息</li>
<li><code>Option + Enter</code> 显示意向动作和快速修复代码</li>
<li><code>Command + Option + L</code> 格式化代码</li>
<li><code>Control + Option + O</code> 优化import</li>
<li><code>Control + Option + I</code> 自动缩进线</li>
<li><code>Tab / Shift + Tab</code> 缩进代码 / 反缩进代码</li>
<li><code>Command + X</code> 剪切当前行或选定的块到剪贴板</li>
<li><code>Command + C</code> 复制当前行或选定的块到剪贴板</li>
<li><code>Command + V</code> 从剪贴板粘贴</li>
<li><code>Command + Shift + V</code> 从最近的缓冲区粘贴</li>
<li><code>Command + D</code> 复制当前行或选定的块</li>
<li><code>Command + Delete</code> 删除当前行或选定的块的行</li>
<li><code>Control + Shift + J</code> 智能的将代码拼接成一行</li>
<li><code>Command + Enter</code> 智能的拆分拼接的行</li>
<li><code>Shift + Enter</code> 开始新的一行</li>
<li><code>Command + Shift + U</code> 大小写切换</li>
<li><code>Command + Shift + ] / Command + Shift + [</code> 选择直到代码块结束/开始</li>
<li><code>Option + Fn + Delete</code> 删除到单词的末尾</li>
<li><code>Option + Delete</code> 删除到单词的开头</li>
<li><code>Command + 加号 / Command + 减号</code> 展开 / 折叠代码块</li>
<li><code>Command + Shift + 加号</code> 展开所以代码块</li>
<li><code>Command + Shift + 减号</code> 折叠所有代码块</li>
<li><code>Command + W</code> 关闭活动的编辑器选项卡</li>
</ul>
<h4 id="二、Search-Replace（查询-替换）"><a href="#二、Search-Replace（查询-替换）" class="headerlink" title="二、Search/Replace（查询/替换）"></a>二、Search/Replace（查询/替换）</h4><ul>
<li><code>Double Shift</code> 查询任何东西</li>
<li><code>Command + F</code> 文件内查找</li>
<li><code>Command + G</code> 查找模式下，向下查找</li>
<li><code>Command + Shift + G</code> 查找模式下，向上查找</li>
<li><code>Command + R</code> 文件内替换</li>
<li><code>Command + Shift + F</code> 全局查找（根据路径）</li>
<li><code>Command + Shift + R</code> 全局替换（根据路径）</li>
<li><code>Command + Shift + S</code> 查询结构（Ultimate Edition 版专用，需要在Keymap中设置）</li>
<li><code>Command + Shift + M</code> 替换结构（Ultimate Edition 版专用，需要在Keymap中设置）</li>
</ul>
<h4 id="三、Usage-Search（使用查询）"><a href="#三、Usage-Search（使用查询）" class="headerlink" title="三、Usage Search（使用查询）"></a>三、Usage Search（使用查询）</h4><ul>
<li><code>Option + F7 / Command + F7</code> 在文件中查找用法 / 在类中查找用法</li>
<li><code>Command + Shift + F7</code> 在文件中突出显示的用法</li>
<li><code>Command + Option + F7</code> 显示用法</li>
</ul>
<h4 id="四、Compile-and-Run（编译和运行）"><a href="#四、Compile-and-Run（编译和运行）" class="headerlink" title="四、Compile and Run（编译和运行）"></a>四、Compile and Run（编译和运行）</h4><ul>
<li><code>Command + F9</code> 编译Project</li>
<li><code>Command + Shift + F9</code> 编译选择的文件、包或模块</li>
<li><code>Control + Option + R</code> 弹出 Run 的可选择菜单</li>
<li><code>Control + Option + D</code> 弹出 Debug 的可选择菜单</li>
<li><code>Control + R</code> 运行</li>
<li><code>Control + D</code> 调试</li>
<li><code>Control + Shift + R, Control + Shift + D</code> 从编辑器运行上下文环境配置</li>
</ul>
<h4 id="五、Debugging（调试）"><a href="#五、Debugging（调试）" class="headerlink" title="五、Debugging（调试）"></a>五、Debugging（调试）</h4><ul>
<li><code>F8</code> 进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</li>
<li><code>F7</code> 进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</li>
<li><code>Shift + F7</code> 智能步入，断点所在行上有多个方法调用，会弹出进入哪个方法</li>
<li><code>Shift + F8</code> 跳出</li>
<li><code>Option + F9</code> 运行到光标处，如果光标前有其他断点会进入到该断点</li>
<li><code>Option + F8</code> 计算表达式（可以更改变量值使其生效）</li>
<li><code>Command + Option + R</code> 恢复程序运行，如果该断点下面代码还有断点则停在下一个断点上</li>
<li><code>Command + F8</code> 切换断点（若光标当前行有断点则取消断点，没有则加上断点）</li>
<li><code>Command + Shift + F8</code> 查看断点信息</li>
</ul>
<h4 id="六、Navigation（导航）"><a href="#六、Navigation（导航）" class="headerlink" title="六、Navigation（导航）"></a>六、Navigation（导航）</h4><ul>
<li><code>Command + O</code> 查找类文件</li>
<li><code>Command + Shift + O</code> 查找所有类型文件、打开文件、打开目录，打开目录需要在输入的内容前面或后面加一个反斜杠<code>/</code></li>
<li><code>Command + Option + O</code> 前往指定的变量 / 方法</li>
<li><code>Control + 方向键左 / Control + 方向键右</code> 左右切换打开的编辑tab页</li>
<li><code>F12</code> 返回到前一个工具窗口</li>
<li><code>Esc</code> 从工具窗口进入代码文件窗口</li>
<li><code>Shift + Esc</code> 隐藏当前或最后一个活动的窗口，且光标进入代码文件窗口</li>
<li><code>Command + Shift + F4</code> 关闭活动run/messages/find/… tab</li>
<li><code>Command + L</code> 在当前文件跳转到某一行的指定处</li>
<li><code>Command + E</code> 显示最近打开的文件记录列表</li>
<li><code>Option + 方向键左 / Option + 方向键右</code> 光标跳转到当前单词 / 中文句的左 / 右侧开头位置</li>
<li><code>Command + Option + 方向键左 / Command + Option + 方向键右</code> 退回 / 前进到上一个操作的地方</li>
<li><code>Command + Shift + Delete</code> 跳转到最后一个编辑的地方</li>
<li><code>Option + F1</code> 显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择(如在代码编辑窗口可以选择显示该文件的Finder)</li>
<li><code>Command + B / Command +  鼠标点击</code> 进入光标所在的方法/变量的接口或是定义处</li>
<li><code>Command + Option + B</code> 跳转到实现处，在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</li>
<li><code>Option + Space, Command + Y</code> 快速打开光标所在方法、类的定义</li>
<li><code>Control + Shift + B</code> 跳转到类型声明处</li>
<li><code>Command + U</code> 前往当前光标所在方法的父类的方法 / 接口定义</li>
<li><code>Control + 方向键下 / Control + 方向键上</code> 当前光标跳转到当前文件的前一个/后一个方法名位置</li>
<li><code>Command + ] / Command + [</code> 移动光标到当前所在代码的花括号开始/结束位置</li>
<li><code>Command + F12</code> 弹出当前文件结构层，可以在弹出的层上直接输入进行筛选（可用于搜索类中的方法）</li>
<li><code>Control + H</code> 显示当前类的层次结构</li>
<li><code>Command + Shift + H</code> 显示方法层次结构</li>
<li><code>Control + Option + H</code> 显示调用层次结构</li>
<li><code>F2 / Shift + F2</code> 跳转到下一个/上一个突出错误或警告的位置</li>
<li><code>F4 / Command + 方向键下</code> 编辑/查看代码源</li>
<li><code>Option + Home</code> 显示到当前文件的导航条</li>
<li><code>F3</code>选中文件/文件夹/代码行，添加/取消书签</li>
<li><code>Option + F3</code> 选中文件/文件夹/代码行，使用助记符添加/取消书签</li>
<li><code>Control + 0...Control + 9</code> 定位到对应数值的书签位置</li>
<li><code>Command + F3</code> 显示所有书签</li>
</ul>
<h4 id="七、Refactoring（重构）"><a href="#七、Refactoring（重构）" class="headerlink" title="七、Refactoring（重构）"></a>七、Refactoring（重构）</h4><ul>
<li><code>F5</code> 复制文件到指定目录</li>
<li><code>F6</code> 移动文件到指定目录</li>
<li><code>Command + Delete</code> 在文件上为安全删除文件，弹出确认框</li>
<li><code>Shift + F6</code> 重命名文件</li>
<li><code>Command + F6</code> 更改签名</li>
<li><code>Command + Option + N</code> 一致性</li>
<li><code>Command + Option + M</code> 将选中的代码提取为方法</li>
<li><code>Command + Option + V</code> 提取变量</li>
<li><code>Command + Option + F</code> 提取字段</li>
<li><code>Command + Option + C</code> 提取常量</li>
<li><code>Command + Option + P</code> 提取参数</li>
</ul>
<h4 id="八、VCS-Local-History（版本控制-本地历史记录）"><a href="#八、VCS-Local-History（版本控制-本地历史记录）" class="headerlink" title="八、VCS/Local History（版本控制/本地历史记录）"></a>八、VCS/Local History（版本控制/本地历史记录）</h4><ul>
<li><code>Command + K</code> 提交代码到版本控制器</li>
<li><code>Command + T</code> 从版本控制器更新代码</li>
<li><code>Option + Shift + C</code> 查看最近的变更记录</li>
<li><code>Control + C</code> 快速弹出版本控制器操作面板</li>
</ul>
<h4 id="九、Live-Templates（动态代码模板）"><a href="#九、Live-Templates（动态代码模板）" class="headerlink" title="九、Live Templates（动态代码模板）"></a>九、Live Templates（动态代码模板）</h4><ul>
<li><code>Command + Option + J</code> 弹出模板选择窗口，将选定的代码使用动态模板包住</li>
<li><code>Command + J</code> 插入自定义动态代码模板</li>
</ul>
<h4 id="十、General（通用）"><a href="#十、General（通用）" class="headerlink" title="十、General（通用）"></a>十、General（通用）</h4><ul>
<li><code>Command + 1...Command + 9</code> 打开相应编号的工具窗口</li>
<li><code>Command + S</code> 保存所有</li>
<li><code>Command + Option + Y</code> 同步、刷新</li>
<li><code>Control + Command + F</code> 切换全屏模式</li>
<li><code>Command + Shift + F12</code> 切换最大化编辑器</li>
<li><code>Option + Shift + F</code> 添加到收藏夹</li>
<li><code>Option + Shift + I</code> 检查当前文件与当前的配置文件</li>
<li>Control + ` 快速切换当前的scheme（切换主题、代码样式等）</li>
<li><code>Command + ,</code> 打开IDEA系统设置</li>
<li><code>Command + ;</code> 打开项目结构对话框</li>
<li><code>Shift + Command + A</code> 查找动作（可设置相关选项）</li>
<li><code>Control + Shift + Tab</code> 编辑窗口标签和工具窗口之间切换（如果在切换的过程加按上delete，则是关闭对应选中的窗口）</li>
</ul>
<h4 id="十一、Other（一些官方文档上没有体现的快捷键）"><a href="#十一、Other（一些官方文档上没有体现的快捷键）" class="headerlink" title="十一、Other（一些官方文档上没有体现的快捷键）"></a>十一、Other（一些官方文档上没有体现的快捷键）</h4><ul>
<li><code>Command + Shift +8</code> 竖编辑模式</li>
</ul>
]]></content>
    
    <summary type="html">
    
      IntelliJ IDEA 本身的设计思维是提倡键盘优先于鼠标的，所以各种快捷键组合层出不穷，对于快捷键设置也有各种支持，对于其他 IDE 的快捷键组合也有预设模板进行支持。使用时，请干掉那些不相关软件的快捷键。
    
    </summary>
    
      <category term="IDE" scheme="https://roc-wong.github.io/categories/IDE/"/>
    
    
      <category term="IDE" scheme="https://roc-wong.github.io/tags/IDE/"/>
    
      <category term="IntelliJ IDEA" scheme="https://roc-wong.github.io/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 快键键</title>
    <link href="https://roc-wong.github.io/blog/2017/03/IntelliJ-IDEA-key-map.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/IntelliJ-IDEA-key-map.html</id>
    <published>2017-03-10T14:54:23.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>直到有一天，当我发现我们都已经渐渐地老去的时候，我才感悟到人世间最珍贵的东西莫过于朋友之间的友谊!朋友，谢谢人生路上曾有你。</p>
</blockquote>
<h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><blockquote>
<p>非常感谢我的朋友<a href="http://www.caosh.me/" target="_blank" rel="external">曹同学</a>(PS:他的博客还在搬家阶段……)，一个极客程序猿，让我真正开始使用IntelliJ IDEA。</p>
</blockquote>
<p>IntelliJ IDEA 本身的设计思维是提倡键盘优先于鼠标的，所以各种快捷键组合层出不穷，对于快捷键设置也有各种支持，对于其他 IDE 的快捷键组合也有预设模板进行支持。使用时，请干掉那些不相关软件的快捷键。</p>
<a id="more"></a>
<p>本篇博客整理自IntelliJ IDEA 简体中文专题教程和日常开发归档：</p>
<blockquote>
<ul>
<li><p><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="external">IntelliJ IDEA 简体中文专题教程</a></p>
</li>
<li><p>Windows / Linux：<a href="https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf" target="_blank" rel="external">https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf</a></p>
</li>
<li><p>Mac OS X：<a href="https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard_Mac.pdf" target="_blank" rel="external">https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard_Mac.pdf</a></p>
</li>
</ul>
</blockquote>
<h2 id="Ctrl"><a href="#Ctrl" class="headerlink" title="Ctrl"></a>Ctrl</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl + F</td>
<td style="text-align:left">在当前文件进行文本查找 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + R</td>
<td style="text-align:left">在当前文件进行文本替换 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Z</td>
<td style="text-align:left">撤销 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Y</td>
<td style="text-align:left">删除光标所在行 或 删除选中的行 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + X</td>
<td style="text-align:left">剪切光标所在行 或 剪切选择内容</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + C</td>
<td style="text-align:left">复制光标所在行 或 复制选择内容</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + D</td>
<td style="text-align:left">复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + W</td>
<td style="text-align:left">递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + E</td>
<td style="text-align:left">显示最近打开的文件记录列表 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + N</td>
<td style="text-align:left">根据输入的 <strong>类名</strong> 查找类文件 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + G</td>
<td style="text-align:left">在当前文件跳转到指定行处</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + J</td>
<td style="text-align:left">插入自定义动态代码模板 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + P</td>
<td style="text-align:left">方法参数提示显示 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Q</td>
<td style="text-align:left">光标所在的变量 / 类名 / 方法名等上面（也可以在提示补充的时候按），显示文档内容</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + U</td>
<td style="text-align:left">前往当前光标所在的方法的父类的方法 / 接口定义 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + B</td>
<td style="text-align:left">进入光标所在的方法/变量的接口或是定义处，等效于 <code>Ctrl + 左键单击</code>  <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + K</td>
<td style="text-align:left">版本控制提交项目，需要此项目有加入到版本控制才可用</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + T</td>
<td style="text-align:left">版本控制更新项目，需要此项目有加入到版本控制才可用</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + H</td>
<td style="text-align:left">显示当前类的层次结构</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + O</td>
<td style="text-align:left">选择可重写的方法</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + I</td>
<td style="text-align:left">选择可继承的方法</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + +</td>
<td style="text-align:left">展开代码</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + -</td>
<td style="text-align:left">折叠代码</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + /</td>
<td style="text-align:left">注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + [</td>
<td style="text-align:left">移动光标到当前所在代码的花括号开始位置</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + ]</td>
<td style="text-align:left">移动光标到当前所在代码的花括号结束位置</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F1</td>
<td style="text-align:left">在光标所在的错误代码处显示错误信息 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F3</td>
<td style="text-align:left">调转到所选中的词的下一个引用位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F4</td>
<td style="text-align:left">关闭当前编辑文件</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F8</td>
<td style="text-align:left">在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F9</td>
<td style="text-align:left">执行 Make Project 操作</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F11</td>
<td style="text-align:left">选中文件 / 文件夹，使用助记符设定 / 取消书签 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F12</td>
<td style="text-align:left">弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Tab</td>
<td style="text-align:left">编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + End</td>
<td style="text-align:left">跳到文件尾</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Home</td>
<td style="text-align:left">跳到文件头</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Space</td>
<td style="text-align:left">基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 <code>Ctrl + 逗号</code> <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Delete</td>
<td style="text-align:left">删除光标后面的单词或是中文句 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + BackSpace</td>
<td style="text-align:left">删除光标前面的单词或是中文句 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 1,2,3…9</td>
<td style="text-align:left">定位到对应数值的书签位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 左键单击</td>
<td style="text-align:left">在打开的文件标题上，弹出该文件路径 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 光标定位</td>
<td style="text-align:left">按 Ctrl 不要松开，会显示光标所在的类信息摘要</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 左方向键</td>
<td style="text-align:left">光标跳转到当前单词 / 中文句的左侧开头位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 右方向键</td>
<td style="text-align:left">光标跳转到当前单词 / 中文句的右侧开头位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 前方向键</td>
<td style="text-align:left">等效于鼠标滚轮向前效果 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + 后方向键</td>
<td style="text-align:left">等效于鼠标滚轮向后效果 <code>（必备）</code></td>
</tr>
</tbody>
</table>
<h2 id="Alt"><a href="#Alt" class="headerlink" title="Alt"></a>Alt</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Alt + `</td>
<td style="text-align:left">显示版本控制常用操作菜单弹出层 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + Q</td>
<td style="text-align:left">弹出一个提示，显示当前类的声明 / 上下文信息</td>
</tr>
<tr>
<td style="text-align:left">Alt + F1</td>
<td style="text-align:left">显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + F2</td>
<td style="text-align:left">对于前面页面，显示各类浏览器打开目标选择弹出层</td>
</tr>
<tr>
<td style="text-align:left">Alt + F3</td>
<td style="text-align:left">选中文本，逐个往下查找相同文本，并高亮显示</td>
</tr>
<tr>
<td style="text-align:left">Alt + F7</td>
<td style="text-align:left">查找光标所在的方法 / 变量 / 类被调用的地方</td>
</tr>
<tr>
<td style="text-align:left">Alt + F8</td>
<td style="text-align:left">在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</td>
</tr>
<tr>
<td style="text-align:left">Alt + Home</td>
<td style="text-align:left">定位 / 显示到当前文件的 <code>Navigation Bar</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + Enter</td>
<td style="text-align:left">IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + Insert</td>
<td style="text-align:left">代码自动生成，如生成对象的 set / get 方法，构造函数，toString() 等 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + 左方向键</td>
<td style="text-align:left">切换当前已打开的窗口中的子视图，比如Debug窗口中有Output、Debugger等子视图，用此快捷键就可以在子视图中切换 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + 右方向键</td>
<td style="text-align:left">按切换当前已打开的窗口中的子视图，比如Debug窗口中有Output、Debugger等子视图，用此快捷键就可以在子视图中切换 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + 前方向键</td>
<td style="text-align:left">当前光标跳转到当前文件的前一个方法名位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + 后方向键</td>
<td style="text-align:left">当前光标跳转到当前文件的后一个方法名位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + 1,2,3…9</td>
<td style="text-align:left">显示对应数值的选项卡，其中 1 是 Project 用得最多 <code>（必备）</code></td>
</tr>
</tbody>
</table>
<h2 id="Shift"><a href="#Shift" class="headerlink" title="Shift"></a>Shift</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Shift + F1</td>
<td style="text-align:left">如果有外部文档可以连接外部文档</td>
</tr>
<tr>
<td style="text-align:left">Shift + F2</td>
<td style="text-align:left">跳转到上一个高亮错误 或 警告位置</td>
</tr>
<tr>
<td style="text-align:left">Shift + F3</td>
<td style="text-align:left">在查找模式下，查找匹配上一个</td>
</tr>
<tr>
<td style="text-align:left">Shift + F4</td>
<td style="text-align:left">对当前打开的文件，使用新Windows窗口打开，旧窗口保留</td>
</tr>
<tr>
<td style="text-align:left">Shift + F6</td>
<td style="text-align:left">对文件 / 文件夹 重命名</td>
</tr>
<tr>
<td style="text-align:left">Shift + F7</td>
<td style="text-align:left">在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</td>
</tr>
<tr>
<td style="text-align:left">Shift + F8</td>
<td style="text-align:left">在 Debug 模式下，跳出，表现出来的效果跟 <code>F9</code> 一样</td>
</tr>
<tr>
<td style="text-align:left">Shift + F9</td>
<td style="text-align:left">等效于点击工具栏的 <code>Debug</code> 按钮</td>
</tr>
<tr>
<td style="text-align:left">Shift + F10</td>
<td style="text-align:left">等效于点击工具栏的 <code>Run</code> 按钮</td>
</tr>
<tr>
<td style="text-align:left">Shift + F11</td>
<td style="text-align:left">弹出书签显示层 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Shift + Tab</td>
<td style="text-align:left">取消缩进 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Shift + ESC</td>
<td style="text-align:left">隐藏当前 或 最后一个激活的工具窗口</td>
</tr>
<tr>
<td style="text-align:left">Shift + End</td>
<td style="text-align:left">选中光标到当前行尾位置</td>
</tr>
<tr>
<td style="text-align:left">Shift + Home</td>
<td style="text-align:left">选中光标到当前行头位置</td>
</tr>
<tr>
<td style="text-align:left">Shift + Enter</td>
<td style="text-align:left">开始新一行。光标所在行下空出一行，光标定位到新行位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Shift + 左键单击</td>
<td style="text-align:left">在打开的文件名上按此快捷键，可以关闭当前打开文件 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Shift + 滚轮前后滚动</td>
<td style="text-align:left">当前文件的横向滚动轴滚动 <code>（必备）</code></td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-Alt"><a href="#Ctrl-Alt" class="headerlink" title="Ctrl + Alt"></a>Ctrl + Alt</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl + Alt + L</td>
<td style="text-align:left">格式化代码，可以对当前文件和整个包目录使用 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + O</td>
<td style="text-align:left">优化导入的类，可以对当前文件和整个包目录使用 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + I</td>
<td style="text-align:left">光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + T</td>
<td style="text-align:left">对选中的代码弹出环绕选项弹出层 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + J</td>
<td style="text-align:left">弹出模板选择窗口，将选定的代码加入动态模板中</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + H</td>
<td style="text-align:left">调用层次</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + B</td>
<td style="text-align:left">在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + V</td>
<td style="text-align:left">快速引进变量</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + Y</td>
<td style="text-align:left">同步、刷新</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + S</td>
<td style="text-align:left">打开 IntelliJ IDEA 系统设置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + F7</td>
<td style="text-align:left">显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + F11</td>
<td style="text-align:left">切换全屏模式</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + Enter</td>
<td style="text-align:left">光标所在行上空出一行，光标定位到新行 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + Home</td>
<td style="text-align:left">弹出跟当前文件有关联的文件弹出层</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + Space</td>
<td style="text-align:left">类名自动完成</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + 左方向键</td>
<td style="text-align:left">退回到上一个操作的地方 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + 右方向键</td>
<td style="text-align:left">前进到上一个操作的地方 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + 前方向键</td>
<td style="text-align:left">在查找模式下，跳到上个查找的文件</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Alt + 后方向键</td>
<td style="text-align:left">在查找模式下，跳到下个查找的文件</td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-Shift"><a href="#Ctrl-Shift" class="headerlink" title="Ctrl + Shift"></a>Ctrl + Shift</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl + Shift + F</td>
<td style="text-align:left">根据输入内容查找整个项目 或 指定目录内文件 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + R</td>
<td style="text-align:left">根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + J</td>
<td style="text-align:left">自动将下一行合并到当前行末尾 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Z</td>
<td style="text-align:left">取消撤销 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + W</td>
<td style="text-align:left">递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + N</td>
<td style="text-align:left">通过文件名定位 / 打开文件 / 目录，打开目录需要在输入的内容后面多加一个正斜杠 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + U</td>
<td style="text-align:left">对选中的代码进行大 / 小写轮流转换 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + T</td>
<td style="text-align:left">对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + C</td>
<td style="text-align:left">复制当前文件磁盘路径到剪贴板 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + V</td>
<td style="text-align:left">弹出缓存的最近拷贝的内容管理器弹出层</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + E</td>
<td style="text-align:left">显示最近修改的文件列表的弹出层</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + H</td>
<td style="text-align:left">显示方法层次结构</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + B</td>
<td style="text-align:left">跳转到类型声明处 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + I</td>
<td style="text-align:left">快速查看光标所在的方法 或 类的定义</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + A</td>
<td style="text-align:left">查找动作 / 设置</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + /</td>
<td style="text-align:left">代码块注释 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + [</td>
<td style="text-align:left">选中从光标所在位置到它的顶部中括号位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + ]</td>
<td style="text-align:left">选中从光标所在位置到它的底部中括号位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + +</td>
<td style="text-align:left">展开所有代码 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + -</td>
<td style="text-align:left">折叠所有代码 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + F7</td>
<td style="text-align:left">高亮显示所有该选中文本，按Esc高亮消失 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + F8</td>
<td style="text-align:left">在 Debug 模式下，指定断点进入条件</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + F9</td>
<td style="text-align:left">编译选中的文件 / 包 / Module</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + F12</td>
<td style="text-align:left">编辑器最大化 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Space</td>
<td style="text-align:left">智能代码提示</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Enter</td>
<td style="text-align:left">自动结束代码，行末自动添加分号 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Backspace</td>
<td style="text-align:left">退回到上次修改的地方 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + 1,2,3…9</td>
<td style="text-align:left">快速添加指定数值的书签 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + 左键单击</td>
<td style="text-align:left">把光标放在某个类变量上，按此快捷键可以直接定位到该类中 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + 左方向键</td>
<td style="text-align:left">在代码文件上，光标跳转到当前单词 / 中文句的左侧开头位置，同时选中该单词 / 中文句 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + 右方向键</td>
<td style="text-align:left">在代码文件上，光标跳转到当前单词 / 中文句的右侧开头位置，同时选中该单词 / 中文句 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + 前方向键</td>
<td style="text-align:left">光标放在方法名上，将方法移动到上一个方法前面，调整方法排序 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + 后方向键</td>
<td style="text-align:left">光标放在方法名上，将方法移动到下一个方法前面，调整方法排序 <code>（必备）</code></td>
</tr>
</tbody>
</table>
<h2 id="Alt-Shift"><a href="#Alt-Shift" class="headerlink" title="Alt + Shift"></a>Alt + Shift</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Alt + Shift + N</td>
<td style="text-align:left">选择 / 添加 task <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + F</td>
<td style="text-align:left">显示添加到收藏夹弹出层 / 添加到收藏夹</td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + C</td>
<td style="text-align:left">查看最近操作项目的变化情况列表</td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + I</td>
<td style="text-align:left">查看项目当前文件</td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + F7</td>
<td style="text-align:left">在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入</td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + F9</td>
<td style="text-align:left">弹出 <code>Debug</code>  的可选择菜单</td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + F10</td>
<td style="text-align:left">弹出 <code>Run</code>  的可选择菜单</td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + 左键双击</td>
<td style="text-align:left">选择被双击的单词 / 中文句，按住不放，可以同时选择其他单词 / 中文句 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + 前方向键</td>
<td style="text-align:left">移动光标所在行向上移动 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Alt + Shift + 后方向键</td>
<td style="text-align:left">移动光标所在行向下移动 <code>（必备）</code></td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-Shift-Alt"><a href="#Ctrl-Shift-Alt" class="headerlink" title="Ctrl + Shift + Alt"></a>Ctrl + Shift + Alt</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl + Shift + Alt + V</td>
<td style="text-align:left">无格式黏贴 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Alt + N</td>
<td style="text-align:left">前往指定的变量 / 方法</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Alt + S</td>
<td style="text-align:left">打开当前项目设置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Ctrl + Shift + Alt + C</td>
<td style="text-align:left">复制参考信息</td>
</tr>
</tbody>
</table>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">F2</td>
<td style="text-align:left">跳转到下一个高亮错误 或 警告位置 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">F3</td>
<td style="text-align:left">在查找模式下，定位到下一个匹配处</td>
</tr>
<tr>
<td style="text-align:left">F4</td>
<td style="text-align:left">编辑源 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">F7</td>
<td style="text-align:left">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</td>
</tr>
<tr>
<td style="text-align:left">F8</td>
<td style="text-align:left">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</td>
</tr>
<tr>
<td style="text-align:left">F9</td>
<td style="text-align:left">在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</td>
</tr>
<tr>
<td style="text-align:left">F11</td>
<td style="text-align:left">添加书签 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">F12</td>
<td style="text-align:left">回到前一个工具窗口 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">Tab</td>
<td style="text-align:left">缩进 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">ESC</td>
<td style="text-align:left">从工具窗口进入代码文件窗口 <code>（必备）</code></td>
</tr>
<tr>
<td style="text-align:left">连按两次Shift</td>
<td style="text-align:left">弹出 <code>Search Everywhere</code> 弹出层</td>
</tr>
</tbody>
</table>
<h2 id="UpperLowerCapitalize-大小写插件快捷键"><a href="#UpperLowerCapitalize-大小写插件快捷键" class="headerlink" title="UpperLowerCapitalize 大小写插件快捷键"></a>UpperLowerCapitalize 大小写插件快捷键</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Alt+P</td>
<td style="text-align:left">to uppercase</td>
</tr>
<tr>
<td style="text-align:left">Alt+L</td>
<td style="text-align:left">to lowercase</td>
</tr>
<tr>
<td style="text-align:left">Alt+C</td>
<td style="text-align:left">首字母大写</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      IntelliJ IDEA 本身的设计思维是提倡键盘优先于鼠标的，所以各种快捷键组合层出不穷，对于快捷键设置也有各种支持，对于其他 IDE 的快捷键组合也有预设模板进行支持。使用时，请干掉那些不相关软件的快捷键。
    
    </summary>
    
      <category term="IDE" scheme="https://roc-wong.github.io/categories/IDE/"/>
    
    
      <category term="IDE" scheme="https://roc-wong.github.io/tags/IDE/"/>
    
      <category term="IntelliJ IDEA" scheme="https://roc-wong.github.io/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>markdown-syntax</title>
    <link href="https://roc-wong.github.io/blog/2017/03/markdown-syntax.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/markdown-syntax.html</id>
    <published>2017-03-08T15:39:02.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>NOTE:</strong> This is Simplelified  Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">Markdown: Syntax</a>.</p>
<p><strong>声明：</strong> 这份文档派生(fork)于<a href="http://markdown.tw/" target="_blank" rel="external">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md" target="_blank" rel="external">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="external">查看这里</a> 。」–By @<a href="http://twitter.com/riku" target="_blank" rel="external">riku</a> / 本项目托管于 <a href="http://gitcafe.com/riku/Markdown-Syntax-CN" target="_blank" rel="external">GitCafe</a></p>
<a id="more"></a>
<p><strong>注：</strong> 本项目同时也托管于 <a href="https://github.com/riku/Markdown-Syntax-CN" target="_blank" rel="external">Github</a> 上，请通过 fork＋pull request 方式来帮忙改进本项目。</p>
<h1 id="Markdown-语法说明-简体中文版-点击查看快速入门"><a href="#Markdown-语法说明-简体中文版-点击查看快速入门" class="headerlink" title="Markdown 语法说明 (简体中文版) / (点击查看快速入门)"></a>Markdown 语法说明 (简体中文版) / (<a href="./markdown-basics.html">点击查看快速入门</a>)</h1><ul>
<li><a href="#overview">概述</a><ul>
<li><a href="#philosophy">宗旨</a></li>
<li><a href="#html">兼容 HTML</a></li>
<li><a href="#autoescape">特殊字符自动转换</a></li>
</ul>
</li>
<li><a href="#block">区块元素</a><ul>
<li><a href="#p">段落和换行</a></li>
<li><a href="#header">标题</a></li>
<li><a href="#blockquote">区块引用</a></li>
<li><a href="#list">列表</a></li>
<li><a href="#precode">代码区块</a></li>
<li><a href="#hr">分隔线</a></li>
</ul>
</li>
<li><a href="#span">区段元素</a><ul>
<li><a href="#link">链接</a></li>
<li><a href="#em">强调</a></li>
<li><a href="#code">代码</a></li>
<li><a href="#img">图片</a></li>
</ul>
</li>
<li><a href="#misc">其它</a><ul>
<li><a href="#backslash">反斜杠</a></li>
<li><a href="#autolink">自动链接</a></li>
</ul>
</li>
<li><a href="#acknowledgement">感谢</a></li>
</ul>
<hr>
<h2 id="overview">概述</h2>

<h3 id="philosophy">宗旨</h3>

<p>Markdown 的目标是实现「易读易写」。</p>
<p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="external">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="external">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="external">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="external">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="external">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="external">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p>
<p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p>
<h3 id="html">兼容 HTML</h3>

<p>Markdown 语法的目标是：成为一种适用于网络的<em>书写</em>语言。</p>
<p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想<em>不是</em>要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种<em>发布</em>的格式，Markdown 是一种<em>书写</em>的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>
<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p>
<p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p>
<p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p>
<pre><code>这是一个普通段落。

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

这是另一个普通段落。
</code></pre><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p>
<p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p>
<p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p>
<h3 id="autoescape">特殊字符自动转换</h3>

<p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p>
<p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的 <code>&amp;</code> 字符也要转换。比如你要链接到：</p>
<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird
</code></pre><p>你必须要把网址转换写为：</p>
<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird
</code></pre><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p>
<p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。</p>
<p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p>
<pre><code>&amp;copy;
</code></pre><p>Markdown 会保留它不动。而若你写：</p>
<pre><code>AT&amp;T
</code></pre><p>Markdown 就会将它转为：</p>
<pre><code>AT&amp;amp;T
</code></pre><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="#html">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p>
<pre><code>4 &lt; 5
</code></pre><p>Markdown 将会把它转换为：</p>
<pre><code>4 &amp;lt; 5
</code></pre><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p>
<hr>
<h2 id="block">区块元素</h2>


<h3 id="p">段落和换行</h3>

<p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p>
<p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p>
<p>如果你<em>确实</em>想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p>
<p>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="#blockquote">区块引用</a> 和多段落的 <a href="#list">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p>
<h3 id="header">标题</h3>

<p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="external">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="external">atx</a> 形式。</p>
<p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p>
<pre><code>This is an H1
=============

This is an H2
-------------
</code></pre><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p>
<p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p>
<pre><code># 这是 H1

## 这是 H2

###### 这是 H6
</code></pre><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p>
<pre><code># 这是 H1 #

## 这是 H2 ##

### 这是 H3 ######
</code></pre><h3 id="blockquote">区块引用 Blockquotes</h3>

<p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p>
<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt;
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p>
<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
</code></pre><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p>
<pre><code>&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.
</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p>
<pre><code>&gt; ## 这是一个标题。
&gt;
&gt; 1.   这是第一行列表项。
&gt; 2.   这是第二行列表项。
&gt;
&gt; 给出一些例子代码：
&gt;
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p>
<h3 id="list">列表</h3>

<p>Markdown 支持有序列表和无序列表。</p>
<p>无序列表使用星号、加号或是减号作为列表标记：</p>
<pre><code>*   Red
*   Green
*   Blue
</code></pre><p>等同于：</p>
<pre><code>+   Red
+   Green
+   Blue
</code></pre><p>也等同于：</p>
<pre><code>-   Red
-   Green
-   Blue
</code></pre><p>有序列表则使用数字接着一个英文句点：</p>
<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p>
<pre><code>&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;/li&gt;
&lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;
</code></pre><p>如果你的列表标记写成：</p>
<pre><code>1.  Bird
1.  McHale
1.  Parish
</code></pre><p>或甚至是：</p>
<pre><code>3. Bird
1. McHale
8. Parish
</code></pre><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p>
<p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p>
<p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p>
<p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p>
<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre><p>但是如果你懒，那也行：</p>
<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code><br>标签包起来，举例来说：</p>
<pre><code>*   Bird
*   Magic
</code></pre><p>会被转换为：</p>
<pre><code>&lt;ul&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;Magic&lt;/li&gt;
&lt;/ul&gt;
</code></pre><p>但是这个：</p>
<pre><code>*   Bird

*   Magic
</code></pre><p>会被转换为：</p>
<pre><code>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p>
<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p>
<pre><code>*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&apos;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
</code></pre><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p>
<pre><code>*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.
</code></pre><p>如果要放代码区块的话，该区块就需要缩进<em>两次</em>，也就是 8 个空格或是 2 个制表符：</p>
<pre><code>*   一列表项包含一个列表区块：

        &lt;代码写在这&gt;
</code></pre><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p>
<pre><code>1986. What a great season.
</code></pre><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p>
<pre><code>1986\. What a great season.
</code></pre><h3 id="precode">代码区块</h3>

<p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p>
<p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p>
<pre><code>这是一个普通段落：

    这是一个代码区块。
</code></pre><p>Markdown 会转换成：</p>
<pre><code>&lt;p&gt;这是一个普通段落：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这是一个代码区块。
&lt;/code&gt;&lt;/pre&gt;
</code></pre><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p>
<pre><code>Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
</code></pre><p>会被转换为：</p>
<pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;
    beep
end tell
&lt;/code&gt;&lt;/pre&gt;
</code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p>
<p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p>
<pre><code>&lt;div class=&quot;footer&quot;&gt;
    &amp;copy; 2004 Foo Corporation
&lt;/div&gt;
</code></pre><p>会被转换为：</p>
<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p>
<h3 id="hr">分隔线</h3>

<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre><hr>
<h2 id="span">区段元素</h2>

<h3 id="link">链接</h3>

<p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p>
<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>
<p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p>
<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre><p>会产生：</p>
<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;
an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no
title attribute.&lt;/p&gt;
</code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p>
<pre><code>See my [About](/about/) page for details.   
</code></pre><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p>
<pre><code>This is [an example][id] reference-style link.
</code></pre><p>你也可以选择性地在两个方括号中间加上一个空格：</p>
<pre><code>This is [an example] [id] reference-style link.
</code></pre><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p>
<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre><p>链接内容定义的形式为：</p>
<ul>
<li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li>
<li>接着一个冒号</li>
<li>接着一个以上的空格或制表符</li>
<li>接着链接的网址</li>
<li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li>
</ul>
<p>下面这三种链接的定义都是相同：</p>
<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &apos;Optional Title Here&apos;
[foo]: http://example.com/  (Optional Title Here)
</code></pre><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p>
<p>链接网址也可以用方括号包起来：</p>
<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;
</code></pre><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p>
<pre><code>[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
</code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p>
<p>链接辨别标签可以有字母、数字、空白和标点符号，但是并<em>不</em>区分大小写，因此下面两个链接是一样的：</p>
<pre><code>[link text][a]
[link text][A]
</code></pre><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p>
<pre><code>[Google][]
</code></pre><p>然后定义链接内容：</p>
<pre><code>[Google]: http://google.com/
</code></pre><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p>
<pre><code>Visit [Daring Fireball][] for more information.
</code></pre><p>然后接着定义链接：</p>
<pre><code>[Daring Fireball]: http://daringfireball.net/
</code></pre><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p>
<p>下面是一个参考式链接的范例：</p>
<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre><p>如果改成用链接名称的方式写：</p>
<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre><p>上面两种写法都会产生下面的 HTML。</p>
<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from
&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;
or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;
</code></pre><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p>
<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p>
<p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p>
<h3 id="em">强调</h3>

<p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p>
<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre><p>会转成：</p>
<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;
</code></pre><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p>
<p>强调也可以直接插在文字中间：</p>
<pre><code>un*frigging*believable
</code></pre><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p>
<p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p>
<pre><code>\*this text is surrounded by literal asterisks\*
</code></pre><h3 id="code">代码</h3>

<p>如果要标记一小段行内代码，你可以用反引号把它包起来（<code>` </code>），例如：</p>
<pre><code>Use the `printf()` function.
</code></pre><p>会产生：</p>
<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
</code></pre><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p>
<pre><code>``There is a literal backtick (`) here.``
</code></pre><p>这段语法会产生：</p>
<pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;
</code></pre><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p>
<pre><code>A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
</code></pre><p>会产生：</p>
<pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;
</code></pre><p>在代码区段内，<code>&amp;</code> 和方括号<strong>都</strong>会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p>
<pre><code>Please don&apos;t use any `&lt;blink&gt;` tags.
</code></pre><p>转为：</p>
<pre><code>&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre><p>你也可以这样写：</p>
<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.
</code></pre><p>以产生：</p>
<pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded
equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;
</code></pre><h3 id="img">图片</h3>

<p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p>
<p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <em>行内式</em>和<em>参考式</em>。</p>
<p>行内式的图片语法看起来像是：</p>
<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre><p>详细叙述如下：</p>
<ul>
<li>一个惊叹号 <code>!</code></li>
<li>接着一个方括号，里面放上图片的替代文字</li>
<li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上<br>选择性的 ‘title’ 文字。</li>
</ul>
<p>参考式的图片语法则长得像这样：</p>
<pre><code>![Alt text][id]
</code></pre><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p>
<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p>
<hr>
<h2 id="misc">其它</h2>

<h3 id="autolink">自动链接</h3>

<p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p>
<pre><code>&lt;http://example.com/&gt;
</code></pre><p>Markdown 会转为：</p>
<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
</code></pre><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p>
<pre><code>&lt;address@example.com&gt;
</code></pre><p>Markdown 会转成：</p>
<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre><p>在浏览器里面，这段字串（其实是 <code>&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;</code>）会变成一个可以点击的「address@example.com」链接。</p>
<p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p>
<h3 id="backslash">反斜杠</h3>

<p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <code>&lt;em&gt;</code> 标签），你可以在星号的前面加上反斜杠：</p>
<pre><code>\*literal asterisks\*
</code></pre><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<pre><code>\   反斜线
`   反引号
*   星号
_   底线
{}  花括号
[]  方括号
()  括弧
#   井字号
+   加号
-   减号
.   英文句点
!   惊叹号
</code></pre><h2 id="acknowledgement">感谢</h2>

<p>感谢 <a href="https://twitter.com/#!/leafy7382" target="_blank" rel="external">leafy7382</a> 协助翻译，<a href="http://iamhlb.com/" target="_blank" rel="external">hlb</a>、<a href="http://twitter.com/randylien" target="_blank" rel="external">Randylien</a> 帮忙润稿，<a href="https://twitter.com/#!/ethantw" target="_blank" rel="external">ethantw</a> 的<a href="http://ethantw.net/projects/han/" target="_blank" rel="external">汉字标准格式・CSS Reset</a>， <a href="http://kidwm.net/" target="_blank" rel="external">WM</a> 回报文字错误。</p>
<p>感谢 <a href="https://github.com/fenprace" target="_blank" rel="external">fenprace</a>，<a href="https://github.com/addv" target="_blank" rel="external">addv</a>。</p>
]]></content>
    
    <summary type="html">
    
      markdown语法, markdown syntax
    
    </summary>
    
      <category term="markdown" scheme="https://roc-wong.github.io/categories/markdown/"/>
    
    
      <category term="markdown" scheme="https://roc-wong.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Mac自定义subl命令</title>
    <link href="https://roc-wong.github.io/blog/2017/03/MacOS-subl.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/MacOS-subl.html</id>
    <published>2017-03-08T15:23:13.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>mac os用户可以通过命令行的方式打开Sublime Text，具体配置如下：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s <span class="string">"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl"</span> <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>subl</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      Mac OS Sublime Text 自定义subl命令
    
    </summary>
    
      <category term="Mac OS" scheme="https://roc-wong.github.io/categories/Mac-OS/"/>
    
    
      <category term="Mac OS" scheme="https://roc-wong.github.io/tags/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title>Multiple SSH Keys settings</title>
    <link href="https://roc-wong.github.io/blog/2017/03/Multiple-SSH-Keys-settings.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/Multiple-SSH-Keys-settings.html</id>
    <published>2017-03-07T12:34:19.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>我不该只是等待，我应该去寻找。</p>
</blockquote>
<p>大多数 Git 服务器都会选择使用 SSH 公钥来进行授权。系统中的每个用户都必须提供一个公钥用于授权，没有的话就要生成一个。生成公钥的过程在所有操作系统上都差不多。</p>
<a id="more"></a>
<p>首先先确认一下是否已经有一个公钥了。SSH 公钥默认储存在账户的主目录下的 ~/.ssh 目录。关键是看有没有用 something 和 something.pub 来命名的一对文件，这个 something 通常就是 id_dsa 或 id_rsa。有 .pub 后缀的文件就是公钥，另一个文件则是密钥。假如没有这些文件，或者干脆连 .ssh 目录都没有，可以用 ssh-keygen 来创建。该程序在 Linux/Mac 系统上由 SSH 包提供，而在 Windows 上则包含在 MSysGit 包里：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$ ssh-keygen</div><div class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> which to save the key (<span class="regexp">/Users/</span>schacon<span class="regexp">/.ssh/</span>id_rsa):</div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</div><div class="line">Enter same passphrase <span class="string">again:</span></div><div class="line">Your identification has been saved <span class="keyword">in</span> <span class="regexp">/Users/</span>schacon<span class="regexp">/.ssh/</span>id_rsa.</div><div class="line">Your <span class="keyword">public</span> key has been saved <span class="keyword">in</span> <span class="regexp">/Users/</span>schacon<span class="regexp">/.ssh/</span>id_rsa.pub.</div><div class="line">The key fingerprint <span class="string">is:</span></div><div class="line"><span class="number">43</span>:<span class="string">c5:</span><span class="number">5</span><span class="string">b:</span><span class="number">5</span><span class="string">f:</span><span class="string">b1:</span><span class="string">f1:</span><span class="number">50</span>:<span class="number">43</span>:<span class="string">ad:</span><span class="number">20</span>:<span class="string">a6:</span><span class="number">92</span>:<span class="number">6</span><span class="string">a:</span><span class="number">1</span><span class="string">f:</span><span class="number">9</span><span class="string">a:</span><span class="number">3</span>a schacon<span class="meta">@agadorlaptop</span>.local</div></pre></td></tr></table></figure>
<p>它先要求你确认保存公钥的位置（.ssh/id_rsa），然后它会让你重复一个密码两次，如果不想在使用公钥的时候输入密码，可以留空。</p>
<p>现在，所有做过这一步的用户都得把它们的公钥给你或者 Git 服务器的管理员（假设 SSH 服务被设定为使用公钥机制）。他们只需要复制 .pub 文件的内容然后发邮件给管理员。</p>
<p>下面以github、gitlab为例，生成ssh公钥。</p>
<p>create different ssh key according the article <a href="https://help.github.com/articles/set-up-git/" target="_blank" rel="external">Mac Set-Up Git</a></p>
<p>Please refer to <a href="https://help.github.com/articles/troubleshooting-ssh/" target="_blank" rel="external">github ssh issues</a> for common problems.</p>
<h2 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h2><p>将项目从git仓库检出</p>
<p>git clone git@github.com:test, cd test and modify git config</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git config user<span class="selector-class">.name</span> <span class="string">"用户名"</span></div><div class="line">git config user<span class="selector-class">.email</span> <span class="string">"邮箱"</span></div><div class="line"></div><div class="line">##全局设置用户名</div><div class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"用户名"</span></div></pre></td></tr></table></figure>
<h2 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"邮箱"</span></div></pre></td></tr></table></figure>
<h2 id="multi-ssh-key"><a href="#multi-ssh-key" class="headerlink" title="multi ssh key"></a>multi ssh key</h2><p>开发过程中，可能会使用不同的git仓库，如github、gitlab或者其他云平台，如果每次都覆盖原来的id_rsa，那么之前的认证就会失效。<br>怎么破？ 在~/.ssh目录下增加config文件，生成ssh key时同时指定文件名即可。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa<span class="selector-class">.touker</span> -C <span class="string">"email"</span></div></pre></td></tr></table></figure>
<p>执行后，~/.ssh目录下会生成id_rsa.touker和id_rsa.touker.pub两个文件</p>
<h2 id="配置config文件"><a href="#配置config文件" class="headerlink" title="配置config文件"></a>配置config文件</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>cd ~<span class="regexp">/.ssh/</span></div><div class="line"><span class="variable">$ </span>touch config</div><div class="line"><span class="variable">$ </span>subl -a config</div></pre></td></tr></table></figure>
<p>修改~/.ssh/config</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Host github.com</div><div class="line">HostName github.com</div><div class="line"><span class="keyword">User</span> <span class="title">roc</span></div><div class="line">IdentityFile /root/.ssh/id_rsa_github</div><div class="line"></div><div class="line">Host <span class="number">10.0</span>.<span class="number">30.24</span></div><div class="line">HostName <span class="number">10.0</span>.<span class="number">30.24</span></div><div class="line"><span class="keyword">User</span> <span class="title">roc</span></div><div class="line">IdentityFile /root/.ssh/id_rsa_touker</div></pre></td></tr></table></figure>
<h2 id="上传公钥id-rsa-pub"><a href="#上传公钥id-rsa-pub" class="headerlink" title="上传公钥id_rsa.pub"></a>上传公钥id_rsa.pub</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 拷贝到剪切板</span></div><div class="line">clip &lt; ~<span class="regexp">/.ssh/i</span>d_rsa.pub</div></pre></td></tr></table></figure>
<ul>
<li>github-&gt;settings-&gt;SSH keys</li>
<li>gitlab -&gt; My SSH keys</li>
</ul>
<h2 id="验证是否配置成功"><a href="#验证是否配置成功" class="headerlink" title="验证是否配置成功"></a>验证是否配置成功</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh -T git@github.com</div><div class="line"></div><div class="line">Hi username! You’ve successfully authenticated, <span class="keyword">but</span> GitHub <span class="keyword">does</span> <span class="keyword">not</span> provide shell access.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      Multiple SSH Keys settings
    
    </summary>
    
      <category term="Git" scheme="https://roc-wong.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://roc-wong.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Maven pom.xml</title>
    <link href="https://roc-wong.github.io/blog/2017/03/Maven-pom.xml.html"/>
    <id>https://roc-wong.github.io/blog/2017/03/Maven-pom.xml.html</id>
    <published>2017-03-01T15:53:48.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>当你的能力还驾驭不了你的目标时，那就应该沉下心来历练。</p>
</blockquote>
<p>pom作为项目对象模型，通过xml表示maven项目，使用pom.xml来实现。主要描述：配置文件，开发者需要遵循的规则，缺陷管理系统，组织和licenses，项目的url，项目的依赖性，以及其他所有的项目相关因素。</p>
<a id="more"></a>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span></div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span>     </span></div><div class="line">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>     </div><div class="line"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;     </div><div class="line">    <span class="comment">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--被继承的父项目的构件标识符--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--被继承的父项目的全球唯一标识符--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--被继承的父项目的版本--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项 目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">parent</span>&gt;</span>    </div><div class="line"> <span class="comment">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&gt;</span>       </div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>asia.banseon<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个 特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目的名称, Maven产生的文档用--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon-maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目主页的URL, Maven产生的文档用--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!-- 项目的详细描述, Maven 产生的文档用。  当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标 签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>A maven project to study maven.<span class="tag">&lt;/<span class="name">description</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--描述了这个项目构建环境中的前提条件。--&gt;</span>    </div><div class="line"> <span class="tag">&lt;<span class="name">prerequisites</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">maven</span>/&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">prerequisites</span>&gt;</span>    </div><div class="line"> <span class="comment">&lt;!--项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">issueManagement</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--问题管理系统（例如jira）的名字，--&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">system</span>&gt;</span>jira<span class="tag">&lt;/<span class="name">system</span>&gt;</span>     </div><div class="line">        <span class="comment">&lt;!--该项目使用的问题管理系统的URL--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://jira.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">issueManagement</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目持续集成信息--&gt;</span>    </div><div class="line"> <span class="tag">&lt;<span class="name">ciManagement</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--持续集成系统的名字，例如continuum--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">system</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">url</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">notifiers</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--配置一种方式，当构建中断时，以该方式通知用户/开发者--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">notifier</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--传送通知的途径--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">type</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--发生错误时是否通知--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">sendOnError</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--构建失败时是否通知--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">sendOnFailure</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--构建成功时是否通知--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">sendOnSuccess</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--发生警告时是否通知--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">sendOnWarning</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--不赞成使用。通知发送到哪里--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">address</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--扩展配置项--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">notifier</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">notifiers</span>&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">ciManagement</span>&gt;</span>    </div><div class="line"> <span class="comment">&lt;!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">inceptionYear</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--项目相关邮件列表信息--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">mailingLists</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">mailingList</span>&gt;</span>     </div><div class="line">         <span class="comment">&lt;!--邮件的名称--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </div><div class="line">            <span class="tag">&lt;<span class="name">post</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">post</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </div><div class="line">            <span class="tag">&lt;<span class="name">subscribe</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">subscribe</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </div><div class="line">            <span class="tag">&lt;<span class="name">unsubscribe</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">unsubscribe</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--你可以浏览邮件信息的URL--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">archive</span>&gt;</span>http:/hi.baidu.com/banseon/demo/dev/<span class="tag">&lt;/<span class="name">archive</span>&gt;</span>     </div><div class="line">        <span class="tag">&lt;/<span class="name">mailingList</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">mailingLists</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目开发者列表--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span>     </div><div class="line">     <span class="comment">&lt;!--某个项目开发者的信息--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span>     </div><div class="line">         <span class="comment">&lt;!--SCM里项目开发者的唯一标识符--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>HELLO WORLD<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--项目开发者的全名--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--项目开发者的email--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--项目开发者的主页的URL--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">url</span>/&gt;</span>    </div><div class="line">            <span class="comment">&lt;!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">roles</span>&gt;</span>     </div><div class="line">                <span class="tag">&lt;<span class="name">role</span>&gt;</span>Project Manager<span class="tag">&lt;/<span class="name">role</span>&gt;</span>     </div><div class="line">                <span class="tag">&lt;<span class="name">role</span>&gt;</span>Architect<span class="tag">&lt;/<span class="name">role</span>&gt;</span>     </div><div class="line">            <span class="tag">&lt;/<span class="name">roles</span>&gt;</span>    </div><div class="line">            <span class="comment">&lt;!--项目开发者所属组织--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">organization</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">organization</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--项目开发者所属组织的URL--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">organizationUrl</span>&gt;</span>http://hi.baidu.com/banseon<span class="tag">&lt;/<span class="name">organizationUrl</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--项目开发者属性，如即时消息如何处理等--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span>     </div><div class="line">                <span class="tag">&lt;<span class="name">dept</span>&gt;</span>No<span class="tag">&lt;/<span class="name">dept</span>&gt;</span>     </div><div class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span>    </div><div class="line">            <span class="comment">&lt;!--项目开发者所在时区， -11到12范围内的整数。--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">timezone</span>&gt;</span>-5<span class="tag">&lt;/<span class="name">timezone</span>&gt;</span>     </div><div class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--项目的其他贡献者列表--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">contributors</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--项目的其他贡献者。参见developers/developer元素--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">contributor</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">name</span>/&gt;</span><span class="tag">&lt;<span class="name">email</span>/&gt;</span><span class="tag">&lt;<span class="name">url</span>/&gt;</span><span class="tag">&lt;<span class="name">organization</span>/&gt;</span><span class="tag">&lt;<span class="name">organizationUrl</span>/&gt;</span><span class="tag">&lt;<span class="name">roles</span>/&gt;</span><span class="tag">&lt;<span class="name">timezone</span>/&gt;</span><span class="tag">&lt;<span class="name">properties</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">contributor</span>&gt;</span>         </div><div class="line">    <span class="tag">&lt;/<span class="name">contributors</span>&gt;</span>       </div><div class="line">    <span class="comment">&lt;!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span>    </div><div class="line">         <span class="comment">&lt;!--license用于法律上的名称--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache 2<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--官方的license正文页面的URL--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.baidu.com/banseon/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--项目分发的主要方式：    </span></div><div class="line">              repo，可以从Maven库下载    </div><div class="line">              manual， 用户必须手动下载和安装依赖--&gt;    </div><div class="line">            <span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--关于license的补充信息--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">comments</span>&gt;</span>A business-friendly OSS license<span class="tag">&lt;/<span class="name">comments</span>&gt;</span>     </div><div class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span>     </div><div class="line">        <span class="comment">&lt;!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。--&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>     </div><div class="line">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)      </div><div class="line">        <span class="tag">&lt;/<span class="name">connection</span>&gt;</span>     </div><div class="line">        <span class="comment">&lt;!--给开发者使用的，类似connection元素。即该连接不仅仅只读--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>     </div><div class="line">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk      </div><div class="line">        <span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span>    </div><div class="line">        <span class="comment">&lt;!--当前代码的标签，在开发阶段默认为HEAD--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">tag</span>/&gt;</span>           </div><div class="line">        <span class="comment">&lt;!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://svn.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span>     </div><div class="line">    <span class="comment">&lt;!--描述项目所属组织的各种属性。Maven产生的文档用--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">organization</span>&gt;</span>     </div><div class="line">     <span class="comment">&lt;!--组织的全名--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">        <span class="comment">&lt;!--组织主页的URL--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">organization</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--构建项目需要的信息--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">sourceDirectory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容 会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">scriptSourceDirectory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">testSourceDirectory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--被编译过的应用程序class文件存放的目录。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--被编译过的测试class文件存放的目录。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">testOutputDirectory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--使用来自该项目的一系列构建扩展--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--描述使用到的构建扩展。--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">extension</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--构建扩展的groupId--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--构建扩展的artifactId--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--构建扩展的版本--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">extension</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--当项目没有规定目标（Maven2 叫做阶段）时的默认值--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">defaultGoal</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--这个元素描述了项目相关或测试相关的所有资源路径--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">resource</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如$</span><span class="template-variable">&#123;project.build.outputDirectory&#125;</span><span class="xml"><span class="comment">）。举个例 子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven /messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--&gt;</span>    </span></div><div class="line">    <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">filtering</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--描述存放资源的目录，该路径相对POM路径--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">directory</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--包含的模式列表，例如**/*.xml.--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">includes</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--排除的模式列表，例如**/*.xml--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">resource</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">testResources</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">testResource</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span><span class="tag">&lt;<span class="name">filtering</span>/&gt;</span><span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">includes</span>/&gt;</span><span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--构建产生的所有文件存放的目录--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">directory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--产生的构件的文件名，默认值是$</span><span class="template-variable">&#123;artifactId&#125;</span><span class="xml"><span class="comment">-$</span></span><span class="template-variable">&#123;version&#125;</span><span class="xml"><span class="comment">。--&gt;</span>    </span></div><div class="line">  <span class="tag">&lt;<span class="name">finalName</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">filters</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--使用的插件列表 。--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--plugin元素包含描述插件所需要的信息。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--插件在仓库里的group ID--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--插件在仓库里的artifact ID--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--被使用的插件的版本（或版本范围）--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--execution元素包含了插件执行需要的信息--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </div><div class="line">       <span class="comment">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">id</span>/&gt;</span>    </div><div class="line">       <span class="comment">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">phase</span>/&gt;</span>    </div><div class="line">       <span class="comment">&lt;!--配置的执行目标--&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">goals</span>/&gt;</span>    </div><div class="line">       <span class="comment">&lt;!--配置是否被传播到子POM--&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </div><div class="line">       <span class="comment">&lt;!--作为DOM对象的配置--&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">      <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--项目引入插件所需要的额外依赖--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">       ......    </div><div class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>         </div><div class="line">     <span class="comment">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--作为DOM对象的配置--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--使用的插件列表--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span><span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span><span class="tag">&lt;<span class="name">version</span>/&gt;</span><span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">phase</span>/&gt;</span><span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">      ......    </div><div class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">build</span>&gt;</span>    </div><div class="line"> <span class="comment">&lt;!--在列的项目构建profile，如果被激活，会修改构建处理--&gt;</span>    </div><div class="line"> <span class="tag">&lt;<span class="name">profiles</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--根据环境参数或命令行参数激活某个构建处理--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">profile</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">id</span>/&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它    </span></div><div class="line">   能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。--&gt;    </div><div class="line">   <span class="tag">&lt;<span class="name">activation</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--profile默认是否激活的标志--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">jdk</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">os</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--激活profile的操作系统的名字--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>Windows XP<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--激活profile的操作系统所属家族(如 'windows')--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Windows<span class="tag">&lt;/<span class="name">family</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--激活profile的操作系统体系结构 --&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">arch</span>&gt;</span>x86<span class="tag">&lt;/<span class="name">arch</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--激活profile的操作系统版本--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.2600<span class="tag">&lt;/<span class="name">version</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">os</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--如果Maven检测到某一个属性（其值可以在POM中通过$</span><span class="template-variable">&#123;名称&#125;</span><span class="xml"><span class="comment">引用），其拥有对应的名称和值，Profile就会被激活。如果值    </span></span></div><div class="line">    字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--&gt;    </div><div class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--激活profile的属性的名称--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>mavenVersion<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--激活profile的属性的值--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>2.0.3<span class="tag">&lt;/<span class="name">value</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活    </span></div><div class="line">    profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--&gt;    </div><div class="line">    <span class="tag">&lt;<span class="name">file</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--如果指定的文件存在，则激活profile。--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">exists</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class="tag">&lt;/<span class="name">exists</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--如果指定的文件不存在，则激活profile。--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">missing</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class="tag">&lt;/<span class="name">missing</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">file</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">activation</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--构建项目所需要的信息。参见build元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">defaultGoal</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">resource</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span><span class="tag">&lt;<span class="name">filtering</span>/&gt;</span><span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">includes</span>/&gt;</span><span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">resource</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">testResources</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">testResource</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span><span class="tag">&lt;<span class="name">filtering</span>/&gt;</span><span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">includes</span>/&gt;</span><span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">finalName</span>/&gt;</span><span class="tag">&lt;<span class="name">filters</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span><span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span><span class="tag">&lt;<span class="name">version</span>/&gt;</span><span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </div><div class="line">         <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">phase</span>/&gt;</span><span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </div><div class="line">       <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">        <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">         ......    </div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">       <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span><span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span><span class="tag">&lt;<span class="name">version</span>/&gt;</span><span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">phase</span>/&gt;</span><span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">       <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">       <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">        ......    </div><div class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">modules</span>/&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">repositories</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--参见repositories/repository元素--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">name</span>/&gt;</span><span class="tag">&lt;<span class="name">url</span>/&gt;</span><span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>        </div><div class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">name</span>/&gt;</span><span class="tag">&lt;<span class="name">url</span>/&gt;</span><span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">     ......    </div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">reports</span>/&gt;</span>       </div><div class="line">   <span class="comment">&lt;!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">reporting</span>&gt;</span>    </div><div class="line">    ......    </div><div class="line">   <span class="tag">&lt;/<span class="name">reporting</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--参见dependencyManagement元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">      ......    </div><div class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--参见distributionManagement元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>    </div><div class="line">    ......    </div><div class="line">   <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--参见properties元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">properties</span>/&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">profile</span>&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span>    </div><div class="line"> <span class="comment">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </div><div class="line"> <span class="tag">&lt;<span class="name">modules</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span>     </div><div class="line">     <span class="comment">&lt;!--包含需要连接到远程仓库的信息--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span>    </div><div class="line">         <span class="comment">&lt;!--如何处理远程仓库里发布版本的下载--&gt;</span>    </div><div class="line">         <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </div><div class="line">          <span class="comment">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-repository-proxy<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </div><div class="line">   <span class="comment">&lt;!--远程仓库名称--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon-repository-proxy<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--远程仓库URL，按protocol://hostname/path形式--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.1.169:9999/repository/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span>               </div><div class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>    </div><div class="line">   ......    </div><div class="line">  <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span>    </div><div class="line"></div><div class="line">    <span class="comment">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--依赖的group ID--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--依赖的artifact ID--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-artifact<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span>    </div><div class="line">            <span class="comment">&lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">classifier</span>&gt;</span><span class="tag">&lt;/<span class="name">classifier</span>&gt;</span>    </div><div class="line">            <span class="comment">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。    </span></div><div class="line">                - compile ：默认范围，用于编译      </div><div class="line">                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath      </div><div class="line">                - runtime: 在执行时需要使用      </div><div class="line">                - test:    用于test任务时使用      </div><div class="line">                - system: 需要外在提供相应的元素。通过systemPath来取得      </div><div class="line">                - systemPath: 仅用于范围为system。提供相应的路径      </div><div class="line">                - optional:   当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用--&gt;     </div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>       </div><div class="line">            <span class="comment">&lt;!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$</span><span class="template-variable">&#123;java.home&#125;</span><span class="xml"><span class="comment">。--&gt;</span>    </span></div><div class="line">            <span class="tag">&lt;<span class="name">systemPath</span>&gt;</span><span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span>    </div><div class="line">             <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span>     </div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>     </div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>     </div><div class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span>     </div><div class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span>       </div><div class="line">            <span class="comment">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--&gt;</span>     </div><div class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span>    </div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">reports</span>&gt;</span><span class="tag">&lt;/<span class="name">reports</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。--&gt;</span>    </div><div class="line"> <span class="tag">&lt;<span class="name">reporting</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">excludeDefaults</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--所有产生的报表存放到哪里。默认值是$</span><span class="template-variable">&#123;project.build.directory&#125;</span><span class="xml"><span class="comment">/site。--&gt;</span>    </span></div><div class="line">  <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--使用的报表插件和他们的配置。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--plugin元素包含描述报表插件需要的信息--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--报表插件在仓库里的group ID--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--报表插件在仓库里的artifact ID--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--被使用的报表插件的版本（或版本范围）--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--报表插件的配置--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">reportSets</span>&gt;</span>    </div><div class="line">     <span class="comment">&lt;!--表示报表的一个集合，以及产生该集合的配置--&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">reportSet</span>&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--报表集合的唯一标识符，POM继承时用到--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">id</span>/&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--产生报表集合时，被使用的报表的配置--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--配置是否被继承到子POMs--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </div><div class="line">      <span class="comment">&lt;!--这个集合里使用到哪些报表--&gt;</span>    </div><div class="line">      <span class="tag">&lt;<span class="name">reports</span>/&gt;</span>    </div><div class="line">     <span class="tag">&lt;/<span class="name">reportSet</span>&gt;</span>    </div><div class="line">    <span class="tag">&lt;/<span class="name">reportSets</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">reporting</span>&gt;</span>    </div><div class="line"> <span class="comment">&lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--&gt;</span>    </div><div class="line"> <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </div><div class="line">    ......    </div><div class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </div><div class="line"> <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span>       </div><div class="line">    <span class="comment">&lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>    </div><div class="line">        <span class="comment">&lt;!--部署项目产生的构件到远程仓库需要的信息--&gt;</span>    </div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span>    </div><div class="line">         <span class="comment">&lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">uniqueVersion</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </div><div class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon maven2<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>file://$<span class="template-variable">&#123;basedir&#125;</span><span class="xml">/target/deploy<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span></div><div class="line">            <span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--&gt;</span>     </div><div class="line">  <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">uniqueVersion</span>/&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">id</span>&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Banseon-maven2 Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">   <span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--部署项目的网站需要的信息--&gt;</span>     </div><div class="line">        <span class="tag">&lt;<span class="name">site</span>&gt;</span>    </div><div class="line">         <span class="comment">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&gt;</span>     </div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-site<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--部署位置的名称--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>business api website<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </div><div class="line">            <span class="comment">&lt;!--部署位置的URL，按protocol://hostname/path形式--&gt;</span>    </div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>     </div><div class="line">                scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web      </div><div class="line">            <span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </div><div class="line">        <span class="tag">&lt;/<span class="name">site</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">downloadUrl</span>/&gt;</span>    </div><div class="line">  <span class="comment">&lt;!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">relocation</span>&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--构件新的group ID--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--构件新的artifact ID--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--构件新的版本号--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </div><div class="line">   <span class="comment">&lt;!--显示给用户的，关于移动的额外信息，例如原因。--&gt;</span>    </div><div class="line">   <span class="tag">&lt;<span class="name">message</span>/&gt;</span>    </div><div class="line">  <span class="tag">&lt;/<span class="name">relocation</span>&gt;</span>    </div><div class="line">  <span class="comment">&lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">status</span>/&gt;</span>           </div><div class="line">    <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span>    </div><div class="line">    <span class="comment">&lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。--&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">properties</span>/&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      maven pom.xml详解
    
    </summary>
    
      <category term="Maven" scheme="https://roc-wong.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://roc-wong.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Linux sed 命令</title>
    <link href="https://roc-wong.github.io/blog/2017/02/Linux-sed.html"/>
    <id>https://roc-wong.github.io/blog/2017/02/Linux-sed.html</id>
    <published>2017-02-24T12:41:57.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>其实对于爱情，越单纯越幸福。</p>
</blockquote>
<p>sed是一种流编辑器，它能够完美配合正则表达式使用，功能非同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件，简化对文件的反复操作，编写转换程序等。</p>
<a id="more"></a>
<h2 id="文件截取"><a href="#文件截取" class="headerlink" title="文件截取"></a>文件截取</h2><p>从2012-02-09到2012-09-10的所有数据行, 日志文件以yyyy-MM-dd的日期格式开头</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -n '/^<span class="number">2012</span><span class="number">-02</span><span class="number">-09</span>/,/^<span class="number">2012</span><span class="number">-09</span><span class="number">-10</span>/p' whole.log &gt; part.log</div></pre></td></tr></table></figure>
<p>从文件中导出包含指定内容的行</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -n '/.*<span class="number">010000061905.</span>*/p' catalina.out<span class="number">.2016</span><span class="number">-12</span><span class="number">-19</span> &gt; <span class="number">010000061905.</span>log</div></pre></td></tr></table></figure>
<p>从日志中截取指定时间的内容,如提取12:00-13:00的内容</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -n '/^16<span class="string">-12</span><span class="string">-19</span> 12:00*/,/^16<span class="string">-12</span><span class="string">-19</span> 13:00*/p' catalina.out.2016<span class="string">-12</span><span class="string">-19</span> &gt; part.log</div></pre></td></tr></table></figure>
<h2 id="提取svn日志"><a href="#提取svn日志" class="headerlink" title="提取svn日志"></a>提取svn日志</h2><p>找出svn提交历史中的message信息</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn log -l2 --<span class="keyword">xml</span> <span class="title">| grep</span> msg | sed -E <span class="string">"s:&lt;/?msg&gt;::g"</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      Linux sed 命令
    
    </summary>
    
      <category term="Linux" scheme="https://roc-wong.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://roc-wong.github.io/tags/Linux/"/>
    
      <category term="Sed" scheme="https://roc-wong.github.io/tags/Sed/"/>
    
      <category term="SVN" scheme="https://roc-wong.github.io/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>基于Rabbitmq实现延迟队列</title>
    <link href="https://roc-wong.github.io/blog/2017/02/%E5%9F%BA%E4%BA%8ERabbitmq%E5%AE%9E%E7%8E%B0%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html"/>
    <id>https://roc-wong.github.io/blog/2017/02/基于Rabbitmq实现延迟队列.html</id>
    <published>2017-02-21T15:18:57.000Z</published>
    <updated>2017-03-10T15:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="延迟队列的使用场景"><a href="#延迟队列的使用场景" class="headerlink" title="延迟队列的使用场景"></a>延迟队列的使用场景</h3><ol>
<li>淘宝订单业务：下单后30min之内没有付款，就自动取消订单。</li>
<li>饿了吗订餐通知：下单成功后60s之后给用户发送短信通知。</li>
<li>关闭空闲连接：服务器中有很多客户端的连接，空闲一段时间之后需要关闭之。</li>
<li>缓存：缓存中的对象，超过了空闲时间，从缓存中移出。</li>
<li>任务超时处理：在网络协议滑动窗口请求应答式交互时，处理超时未响应的请求。</li>
<li>失败重试机制：业务操作失败后，间隔一定的时间进行失败重试。</li>
</ol>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=402073804&auto=0&height=66"></iframe>

<a id="more"></a>
<p>这类业务的特点就是：延迟工作、失败重试。一种比较笨的方式是使用后台线程遍历所有对象，挨个检查。这种方法虽然简单好用，但是对象数量过多时，可能存在性能问题，检查间隔时间不好设置，间隔时间过大，影响精确度，过小则存在效率问题，而且做不到按超时的时间顺序处理。</p>
<h3 id="本地延迟队列-DelayQueue"><a href="#本地延迟队列-DelayQueue" class="headerlink" title="本地延迟队列 DelayQueue"></a>本地延迟队列 DelayQueue</h3><p>DelayQueue是一个无界的BlockingQueue，用于放置实现了Delayed接口的对象，其中的对象只能在其到期时才能从队列中取走。这种队列是有序的，即队头对象的延迟到期时间最长。Delayed扩展了Comparable接口，比较的基准为延时的时间值，Delayed接口的实现类getDelay的返回值应为固定值（final）。DelayQueue内部是使用PriorityQueue实现的。</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="attr">DelayQueue</span> = BlockingQueue + PriorityQueue + Delayed</div></pre></td></tr></table></figure>
<p>DelayQueue的关键元素BlockingQueue、PriorityQueue、Delayed。可以这么说，DelayQueue是一个使用优先队列（PriorityQueue）实现的BlockingQueue，优先队列的比较基准值是时间。(注意：不能将null元素放置到这种队列)</p>
<p>但是我们知道，利用DelayQueue实现的是一个单机的、JVM内存中的延迟队列，并没有集群的支持，而且无法满足在对业务系统泵机的时、消息消费异常的时候做相应的逻辑处理。</p>
<h3 id="基于分布式消息队列RabbitMQ实现延迟队列"><a href="#基于分布式消息队列RabbitMQ实现延迟队列" class="headerlink" title="基于分布式消息队列RabbitMQ实现延迟队列"></a>基于分布式消息队列RabbitMQ实现延迟队列</h3><p>RabbitMQ本身没有直接支持延迟队列功能，但是可以通过以下特性模拟出延迟队列的功能：</p>
<h4 id="Per-Queue-Message-TTL-RabbitMQ可以对消息和队列设置TTL（过期时间）。"><a href="#Per-Queue-Message-TTL-RabbitMQ可以对消息和队列设置TTL（过期时间）。" class="headerlink" title="Per-Queue Message TTL RabbitMQ可以对消息和队列设置TTL（过期时间）。"></a>Per-Queue Message TTL RabbitMQ可以对消息和队列设置TTL（过期时间）。</h4><p>RabbitMQ针对队列中的消息过期时间(Time To Live, TTL)有两种方法可以设置。第一种方法是通过队列属性设置，队列中所有消息都有相同的过期时间。第二种方法是对消息进行单独设置，每条消息TTL可以不同。如果上述两种方法同时使用，则消息的过期时间以两者之间TTL较小的那个数值为准。消息在队列的生存时间一旦超过设置的TTL值，就成为dead message,消费者将无法再收到该消息。</p>
<h4 id="Dead-Letter-Exchanges-死信消息"><a href="#Dead-Letter-Exchanges-死信消息" class="headerlink" title="Dead Letter Exchanges 死信消息"></a>Dead Letter Exchanges 死信消息</h4><p>利用DLX，当消息在一个队列中变成死信后，它能被重新publish到另一个Exchange，这个Exchange就是DLX。消息变成死信有以下几种情况：</p>
<ol>
<li>消息被拒绝（basic.reject or basic.nack）并且requeue=false</li>
<li>消息TTL过期</li>
<li>队列达到最大长度</li>
</ol>
<p>DLX同一般的Exchange没有区别，它能在任何的队列上被指定，实际上就是设置某个队列的属性。当队列中有死信消息时，RabbitMQ就会自动的将死信消息重新发布到设置的Exchange中去，进而被路由到另一个队列，publish可以监听这个队列中消息做相应的处理，这个特性可以弥补RabbitMQ 3.0.0以前支持的immediate参数中的向publish确认的功能。</p>
<p>结合以上两个特性，就可以模拟出延迟消息的功能.</p>
<h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p><img src="http://10.0.30.197:8088/upload/af8d5c2618b54a7ea572992090e8a830.png" alt=""></p>
<h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> hbec.app.stock.rabbitmq.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.google.common.base.Preconditions;</div><div class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</div><div class="line"><span class="keyword">import</span> com.rabbitmq.client.AMQP;</div><div class="line"><span class="keyword">import</span> com.rabbitmq.client.Channel;</div><div class="line"><span class="keyword">import</span> com.rabbitmq.client.Connection;</div><div class="line"><span class="keyword">import</span> com.rabbitmq.client.Consumer;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@Description</span> &lt;strong&gt;基于RabbitMQ实现的分布式延迟重试队列&lt;/strong&gt;</div><div class="line"> *</div><div class="line"> * &lt;ul&gt;</div><div class="line"> * 		&lt;li&gt;delayExchangeName : 交换器名称&lt;/li&gt;</div><div class="line"> * 		&lt;li&gt;delayQueueName : 延迟队列名称&lt;/li&gt;</div><div class="line"> * 		&lt;li&gt;delayRoutingKeyName : 路由器名称&lt;/li&gt;</div><div class="line"> * 		&lt;li&gt;perDelayQueueMessageTTL : 延迟队列中message的默认ttl&lt;/li&gt;</div><div class="line"> * &lt;/ul&gt;</div><div class="line"> * 通过&#123;<span class="doctag">@link</span> RabbitMQDelayQueue#put(byte[], long, TimeUnit)&#125;首次进入延迟队列的消息，</div><div class="line"> * 其ttl = min(message ttl, per queue message ttl)，</div><div class="line"> * 消息被Reject/nack之后变成死信消息，其自带message ttl失效，</div><div class="line"> * 以后将按照&#123;<span class="doctag">@link</span> #perDelayQueueMessageTTL&#125;指定的延迟时间投递给经由&#123;<span class="doctag">@link</span> RabbitMQDelayQueue#consumerRegister&#125;注册的消费者，直到消息被Ack.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> roc roc.fly@qq.com</div><div class="line"> * <span class="doctag">@date</span> Dec 9, 2016 3:29:39 PM</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMQDelayQueue</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Logger LOGGER = LoggerFactory.getLogger(RabbitMQDelayQueue.class);</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String POSTFIX_TASK = <span class="string">"_task"</span>;</div><div class="line">	<span class="comment">// direct类型 交换器</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXCHANGE_TYPE_DIRECT = <span class="string">"direct"</span>;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> Connection connection;</div><div class="line">	<span class="comment">//注册消费者</span></div><div class="line">	<span class="keyword">private</span> ConsumerRegister consumerRegister;</div><div class="line"></div><div class="line">	<span class="comment">//任务队列配置</span></div><div class="line">	<span class="keyword">private</span> String taskExchangeName;</div><div class="line">	<span class="keyword">private</span> String taskQueueName;</div><div class="line">	<span class="keyword">private</span> String taskRoutingKeyName;</div><div class="line"></div><div class="line">	<span class="comment">//延迟队列配置</span></div><div class="line">	<span class="keyword">private</span> String delayExchangeName;</div><div class="line">	<span class="keyword">private</span> String delayQueueName;</div><div class="line">	<span class="keyword">private</span> String delayRoutingKeyName;</div><div class="line"></div><div class="line">	<span class="comment">//延迟队列中的消息ttl</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">long</span> perDelayQueueMessageTTL;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">RabbitMQDelayQueue</span><span class="params">(Connection connection, ConsumerRegister consumerRegister, String delayExchangeName, String delayQueueName, String delayRoutingKeyName, <span class="keyword">long</span> perDelayQueueMessageTTL)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">		<span class="keyword">this</span>.connection = connection;</div><div class="line">		<span class="keyword">this</span>.consumerRegister = consumerRegister;</div><div class="line">		<span class="keyword">this</span>.delayExchangeName = delayExchangeName;</div><div class="line">		<span class="keyword">this</span>.delayQueueName = delayQueueName;</div><div class="line">		<span class="keyword">this</span>.delayRoutingKeyName = delayRoutingKeyName;</div><div class="line">		<span class="keyword">this</span>.perDelayQueueMessageTTL = perDelayQueueMessageTTL;</div><div class="line">		<span class="keyword">this</span>.taskExchangeName = delayExchangeName + POSTFIX_TASK;</div><div class="line">		<span class="keyword">this</span>.taskQueueName = delayQueueName + POSTFIX_TASK;</div><div class="line">		<span class="keyword">this</span>.taskRoutingKeyName = delayRoutingKeyName + POSTFIX_TASK;</div><div class="line">		init();</div><div class="line">		registerConsumer();</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 *</div><div class="line">	 * <span class="doctag">@Description</span> 注册消费者</div><div class="line">	 * <span class="doctag">@author</span> roc roc.fly@qq.com</div><div class="line">	 * <span class="doctag">@date</span> Dec 29, 2016 1:36:25 PM</div><div class="line">	 */</div><div class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ConsumerRegister</span> </span>&#123;</div><div class="line">		<span class="function"><span class="keyword">public</span> Consumer <span class="title">register</span><span class="params">(Channel channel)</span> <span class="keyword">throws</span> IOException</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 注册带有ttl的queue和对应的任务队列</div><div class="line">	 *</div><div class="line">	 * <span class="doctag">@throws</span> IOException</div><div class="line">	 * <span class="doctag">@author</span> roc</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">		Channel channel = connection.createChannel();</div><div class="line"></div><div class="line">		channel.exchangeDeclare(taskExchangeName, EXCHANGE_TYPE_DIRECT, <span class="keyword">true</span>);</div><div class="line">		channel.exchangeDeclare(delayExchangeName, EXCHANGE_TYPE_DIRECT, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">		<span class="comment">// 任务队列 B</span></div><div class="line">		HashMap&lt;String, Object&gt; argumentsTask = Maps.newHashMap();</div><div class="line">		argumentsTask.put(<span class="string">"x-dead-letter-exchange"</span>, delayExchangeName);</div><div class="line">		argumentsTask.put(<span class="string">"x-dead-letter-routing-key"</span>, delayRoutingKeyName);</div><div class="line">		channel.queueDeclare(taskQueueName, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, argumentsTask);</div><div class="line">		channel.queueBind(taskQueueName, taskExchangeName, taskRoutingKeyName);</div><div class="line"></div><div class="line">		<span class="comment">// 延迟队列 A</span></div><div class="line">		HashMap&lt;String, Object&gt; argumentsDelay = Maps.newHashMap();</div><div class="line">		argumentsDelay.put(<span class="string">"x-dead-letter-exchange"</span>, taskExchangeName);</div><div class="line">		argumentsDelay.put(<span class="string">"x-dead-letter-routing-key"</span>, taskRoutingKeyName);</div><div class="line">		argumentsDelay.put(<span class="string">"x-message-ttl"</span>, perDelayQueueMessageTTL);</div><div class="line">		channel.queueDeclare(delayQueueName, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, argumentsDelay);</div><div class="line">		channel.queueBind(delayQueueName, delayExchangeName, delayRoutingKeyName);</div><div class="line"></div><div class="line">		channel.close();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 注册消费者</div><div class="line">	 * <span class="doctag">@throws</span> IOException</div><div class="line">	 * <span class="doctag">@author</span> roc</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registerConsumer</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">		LOGGER.info(<span class="string">"register consumer -&gt;&#123;&#125;"</span>, <span class="keyword">this</span>);</div><div class="line">		Channel channel = connection.createChannel();</div><div class="line">		Consumer consumer = consumerRegister.register(channel);</div><div class="line">		channel.basicConsume(taskQueueName, <span class="keyword">false</span>, consumer);</div><div class="line">		LOGGER.info(<span class="string">"register consumer -&gt;&#123;&#125; success"</span>, <span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 消息入队</div><div class="line">	 *</div><div class="line">	 * <span class="doctag">@param</span> body 消息内容</div><div class="line">	 * <span class="doctag">@param</span> timeout 超时时间</div><div class="line">	 * <span class="doctag">@param</span> unit 超时时间单位</div><div class="line">	 * <span class="doctag">@throws</span> IOException</div><div class="line">	 * <span class="doctag">@author</span> roc</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">byte</span>[] body, <span class="keyword">long</span> timeout, TimeUnit unit)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">		Preconditions.checkNotNull(body);</div><div class="line">		Preconditions.checkArgument(timeout &gt;= <span class="number">0</span>);</div><div class="line">		Preconditions.checkNotNull(unit);</div><div class="line"></div><div class="line">		LOGGER.info(<span class="string">"put element to delay queue -&gt;&#123;&#125;"</span>, body.hashCode());</div><div class="line">		Channel channel = <span class="keyword">null</span>;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			channel = connection.createChannel();</div><div class="line">			<span class="comment">// deliveryMode=2 标识任务的持久性</span></div><div class="line">			<span class="keyword">long</span> millis = unit.toMillis(timeout);</div><div class="line">			AMQP.BasicProperties properties = <span class="keyword">new</span> AMQP.BasicProperties.Builder().expiration(String.valueOf(millis)).deliveryMode(<span class="number">2</span>).build();</div><div class="line">			channel.basicPublish(delayExchangeName, delayRoutingKeyName, properties, body);</div><div class="line">			LOGGER.info(<span class="string">"put element to delay queue success"</span>);</div><div class="line">		&#125; <span class="keyword">finally</span> &#123;</div><div class="line">			<span class="keyword">if</span> (<span class="keyword">null</span> != channel)</div><div class="line">				channel.close();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</div><div class="line"></div><div class="line">		<span class="keyword">private</span> Connection connection;</div><div class="line">		<span class="keyword">private</span> ConsumerRegister consumerRegister;</div><div class="line"></div><div class="line">		<span class="keyword">private</span> String delayExchangeName;</div><div class="line">		<span class="keyword">private</span> String delayQueueName;</div><div class="line">		<span class="keyword">private</span> String delayRoutingKeyName;</div><div class="line"></div><div class="line">		<span class="keyword">private</span> <span class="keyword">long</span> perDelayQueueMessageTTL;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> Builder <span class="title">setConnection</span><span class="params">(Connection connection)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.connection = connection;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> Builder <span class="title">setDelayExchangeName</span><span class="params">(String delayExchangeName)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.delayExchangeName = delayExchangeName;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> Builder <span class="title">setDelayQueueName</span><span class="params">(String delayQueueName)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.delayQueueName = delayQueueName;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> Builder <span class="title">setDelayRoutingKeyName</span><span class="params">(String delayRoutingKeyName)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.delayRoutingKeyName = delayRoutingKeyName;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> Builder <span class="title">setConsumerRegister</span><span class="params">(ConsumerRegister consumerRegister)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.consumerRegister = consumerRegister;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> Builder <span class="title">setPerDelayQueueMessageTTL</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span> </span>&#123;</div><div class="line">			<span class="keyword">this</span>.perDelayQueueMessageTTL = unit.toMillis(timeout);;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> RabbitMQDelayQueue <span class="title">build</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">			Preconditions.checkNotNull(connection);</div><div class="line">			Preconditions.checkNotNull(delayExchangeName);</div><div class="line">			Preconditions.checkNotNull(delayQueueName);</div><div class="line">			Preconditions.checkNotNull(delayRoutingKeyName);</div><div class="line">			Preconditions.checkNotNull(consumerRegister);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">new</span> RabbitMQDelayQueue(connection, consumerRegister, delayExchangeName, delayQueueName, delayRoutingKeyName, perDelayQueueMessageTTL);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">package hbec.app.stock.rabbitmq.utils;</div><div class="line"></div><div class="line">import hbec.app.stock.rabbitmq.utils.RabbitMQDelayQueue.ConsumerRegister;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.nio.charset.Charset;</div><div class="line">import java.util.List;</div><div class="line">import java.util.Map;</div><div class="line">import java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line">import com.rabbitmq.client.AMQP.BasicProperties;</div><div class="line">import com.rabbitmq.client.Address;</div><div class="line">import com.rabbitmq.client.Channel;</div><div class="line">import com.rabbitmq.client.Connection;</div><div class="line">import com.rabbitmq.client.ConnectionFactory;</div><div class="line">import com.rabbitmq.client.Consumer;</div><div class="line">import com.rabbitmq.client.DefaultConsumer;</div><div class="line">import com.rabbitmq.client.Envelope;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 测试demo</div><div class="line"> *</div><div class="line"> */</div><div class="line">public class RabbitMQDelayQueueTest &#123;</div><div class="line"></div><div class="line">	public static void main(String[] args) throws IOException &#123;</div><div class="line">		delayQueue();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void delayQueue() throws IOException &#123;</div><div class="line"></div><div class="line">		ConnectionFactory factory = new ConnectionFactory();</div><div class="line">		factory.setUsername(&quot;guest&quot;);</div><div class="line">		factory.setPassword(&quot;guest&quot;);</div><div class="line">		Address address = new Address(&quot;10.0.30.67&quot;, 56720);</div><div class="line">		Connection connection = factory.newConnection(new Address[] &#123; address &#125;);</div><div class="line"></div><div class="line">		RabbitMQDelayQueue delayQueue = new RabbitMQDelayQueue.Builder().setConnection(connection).setPerDelayQueueMessageTTL(15, TimeUnit.SECONDS).setDelayExchangeName(&quot;delay_exchange_roc&quot;).setDelayQueueName(&quot;delay_queue_roc&quot;).setDelayRoutingKeyName(&quot;delay_routing_key_roc&quot;).setConsumerRegister(new ConsumerRegister() &#123;</div><div class="line">			@Override</div><div class="line">			public Consumer register(Channel channel) throws IOException &#123;</div><div class="line">				return new DefaultConsumer(channel) &#123;</div><div class="line">					@Override</div><div class="line">					public void handleDelivery(String consumerTag, Envelope envelope, BasicProperties properties, byte[] body) throws IOException &#123;</div><div class="line">						long deliveryTag = envelope.getDeliveryTag();</div><div class="line">						String exchange = envelope.getExchange();</div><div class="line">						String routingKey = envelope.getRoutingKey();</div><div class="line">						// TODO do something</div><div class="line">						String content = new String(body, Charset.forName(&quot;utf-8&quot;));</div><div class="line">						System.out.println(&quot;receive message --- &gt; &quot; + content);</div><div class="line"></div><div class="line">						Map&lt;String, Object&gt; headers = properties.getHeaders();</div><div class="line">						if (headers != null) &#123;</div><div class="line">							List&lt;Map&lt;String, Object&gt;&gt; xDeath = (List&lt;Map&lt;String, Object&gt;&gt;) headers.get(&quot;x-death&quot;);</div><div class="line">							System.out.println(&quot;xDeath--- &gt; &quot; + xDeath);</div><div class="line">							if (xDeath != null &amp;&amp; !xDeath.isEmpty()) &#123;</div><div class="line">								Map&lt;String, Object&gt; entrys = xDeath.get(0);</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">						// 消息拒收</div><div class="line">						// if(do something) 消息重新入队</div><div class="line">							getChannel().basicReject(deliveryTag, false);</div><div class="line">						// else 消息应答</div><div class="line">						// getChannel().basicAck(deliveryTag, false);</div><div class="line">					&#125;</div><div class="line">				&#125;;</div><div class="line">			&#125;</div><div class="line">		&#125;).build();</div><div class="line"></div><div class="line">		delayQueue.put(&quot;&#123;\&quot;name\&quot; : \&quot;i am roc!!\&quot;&#125;\&quot;&quot;.getBytes(&quot;UTF-8&quot;), 3, TimeUnit.SECONDS);</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      基于Rabbitmq实现分布式延迟队列
    
    </summary>
    
      <category term="RabbitMQ" scheme="https://roc-wong.github.io/categories/RabbitMQ/"/>
    
    
      <category term="RabbitMQ" scheme="https://roc-wong.github.io/tags/RabbitMQ/"/>
    
  </entry>
  
</feed>
